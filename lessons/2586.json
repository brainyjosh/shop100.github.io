{"lesson":{"id":2586,"name":"The var Keyword","type":0,"mode":1,"videoID":null,"tags":"variables","quizzes":[{"id":5371,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102766,"text":"Double","isCorrect":true,"properties":{}},{"id":102767,"text":"String","isCorrect":false,"properties":{}},{"id":102768,"text":"Boolean","isCorrect":false,"properties":{}},{"id":102769,"text":"Integer","isCorrect":false,"properties":{}}],"question":"What is the type of the temp variable?\r\nvar temp = 14.55;","textContent":"[h1]The var Keyword[/h1]\r\n \r\nA variable can be explicitly declared with its [b]type [/b]before it is used.\r\nAlternatively, C# provides a handy function to enable the compiler to determine the type of the variable automatically based on the expression it is assigned to. \r\nThe [b]var [/b]keyword is used for those scenarios: [code format=\"cs\" ][b]var[/b] num = 15;[/code]\r\n[note]The code above makes the compiler determine the type of the variable. Since the value assigned to the variable is an integer, the variable will be declared as an integer automatically.[/note]"},{"id":5372,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":111367,"text":"true","isCorrect":false,"properties":{}},{"id":111368,"text":"1","isCorrect":false,"properties":{}},{"id":111369,"text":"error","isCorrect":true,"properties":{}}],"question":"What is the output of this code?\r\nvar n1;\r\nn1 = true;\r\nConsole.WriteLine(n1);","textContent":"[h1]The var Keyword[/h1]\r\n\r\nVariables declared using the [b]var [/b]keyword are called[b] implicitly typed[/b] variables.\r\nImplicitly typed variables [b]must [/b]be initialized with a value.\r\nFor example, the following program will cause an error: [code format=\"cs\" ][b]var [/b]num;\r\nnum = 42;[/code]\r\n[note]Although it is easy and convenient to declare variables using the [b]var [/b]keyword, overuse can harm the readability of your code. Best practice is to explicitly declare variables.[/note]"}]}}