{"lesson":{"id":2155,"name":"Creating Classes & Objects","type":0,"mode":1,"videoID":"XqTg2buXS5o","tags":"classes objects","quizzes":[{"id":4249,"number":1,"videoStart":4.0,"videoEnd":261.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95429,"text":"class","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":95430,"text":"test","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to create a class with a single method called \"test\".\r\n[!raw!]\r\npublic {0} A {\r\n  public void {1}() {\r\n    System.out.println(''Hi'');\r\n  }  \r\n}","textContent":"[h1]Creating Classes[/h1]\r\n\r\nIn order to create your own custom objects, you must first create the corresponding classes. This is accomplished by right clicking on the [b]src [/b]folder in Eclipse and selecting Create->New->Class. Give your class a name and click [b]Finish [/b]to add the new class to your project: [img id=\"2866\" width=\"100%\"]\r\nAs you can see, Eclipse has already added the initial code for the class.\r\nNow lets create a simple method in our new class.\r\n[b][u]Animal.java[/u][/b] [code format=\"java\"]public class Animal {\r\n  void bark() {\r\n    System.out.println(\"Woof-Woof\");\r\n  }\r\n}[/code]\r\nWe declared a [b]bark()[/b] method in our [b]Animal [/b]class.\r\n[note]Now, in order to use the class and it's methods, we need to declare an [b]object [/b]of that class.[/note]"},{"id":4250,"number":2,"videoStart":261.0,"videoEnd":340.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99567,"text":"class","isCorrect":true,"properties":{}},{"id":99568,"text":"A","isCorrect":true,"properties":{}},{"id":99569,"text":"new","isCorrect":true,"properties":{}},{"id":99570,"text":"test()","isCorrect":true,"properties":{}},{"id":99571,"text":"create","isCorrect":false,"properties":{}},{"id":99572,"text":"object","isCorrect":false,"properties":{}},{"id":99573,"text":"B","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to create an object of the A class in the B class and call its \"test\" method.\r\n[!raw!]\r\npublic {0} A {\r\n  public void test() {\r\n    System.out.println(\"Hi\");\r\n  }\t \r\n}\r\nclass B {\r\n  public static void main(String args[ ]) {\r\n    {1} obj = {2} A();\r\n    obj.{3};\r\n  }\r\n}","textContent":"[h1]Creating Objects[/h1]\r\n\r\nLet's head over to our [b]main[/b] and create a new object of our class.\r\n[b][u]MyClass.java[/u][/b][code format=\"java\" codeId=\"757\"]class MyClass {\r\n  public static void main(String[ ] args) {\r\n    [b]Animal dog = new Animal();[/b]\r\n    [b]dog.bark();[/b]\r\n  }\r\n}\r\n// Outputs \"Woof-Woof\"[/code]\r\nNow, [b]dog [/b]is an object of type [b]Animal[/b]. Thus we can call its [b]bark[/b]() method, using the name of the object and a [b]dot[/b].\r\nThe [b]dot [/b]notation is used to access the object's [b]attributes [/b]and [b]methods[/b].\r\n[note]You have just created your first object![/note]"}]}}