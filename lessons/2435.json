{"lesson":{"id":2435,"name":"for Loops","type":0,"mode":1,"videoID":null,"tags":"loops","quizzes":[{"id":5007,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104632,"text":"if statements","isCorrect":false,"properties":{}},{"id":104633,"text":"Loops","isCorrect":true,"properties":{}},{"id":104634,"text":"Variable assignment","isCorrect":false,"properties":{}}],"question":"Which construct can be used to iterate through a list?","textContent":"[h1]Loops[/h1]\r\n\r\nSometimes, you need to perform code on each item in a list. This is called iteration, and it can be accomplished with a [b]while[/b] loop and a counter variable.\r\n[b]For example:[/b] [code format=\"py\" codeId=\"326\"]words = [\"hello\", \"world\", \"spam\", \"eggs\"]\r\ncounter = 0\r\nmax_index = len(words) - 1\r\n\r\n[b]while [/b]counter <= max_index:\r\n   word = words[counter]\r\n   print(word + \"!\")\r\n   counter = counter + 1 [/code]\r\n[b]Result: [/b][code format=\"raw\" ]>>>\r\nhello!\r\nworld!\r\nspam!\r\neggs!\r\n>>>[/code]\r\n[note]The example above iterates through all items in the list, accesses them using their indices, and prints them with exclamation marks.[/note]"},{"id":5008,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98042,"text":"for","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":98043,"text":"in","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":98044,"text":":","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to create a valid for loop.\r\n[!raw!]\r\nletters = ['a', 'b', 'c']\r\n{0} l {1} letters{2}\r\n  print(l)","textContent":"[h1]for Loop[/h1]\r\n\r\nIterating through a list using a [b]while[/b] loop requires quite a lot of code, so Python provides the [b]for[/b] loop as a shortcut that accomplishes the same thing.\r\nThe same code from the previous example can be written with a [b]for[/b] loop, as follows: [code format=\"py\" codeId=\"327\"]words = [\"hello\", \"world\", \"spam\", \"eggs\"]\r\n[b]for [/b]word [b]in [/b]words:\r\n  print(word + \"!\")[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nhello!\r\nworld!\r\nspam!\r\neggs!\r\n>>>[/code]\r\n[note]The [b]for [/b]loop in Python is like the [b]foreach [/b]loop in other languages.[/note]"},{"id":5009,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98045,"text":"for","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":98046,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":98047,"text":"i","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to create a for loop that prints only the even values in the range:\r\n[!raw!]\r\n{0} i in range(0, 20, {1}):\r\n  print({2})","textContent":"[h1]for Loops[/h1]\r\n\r\nThe [b]for[/b] loop is commonly used to repeat some code a certain number of times. This is done by combining for loops with [b]range[/b] objects.[code format=\"py\" codeId=\"328\"][b]for [/b]i in [b]range[/b](5):\r\n  print(\"hello!\")[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nhello!\r\nhello!\r\nhello!\r\nhello!\r\nhello!\r\n>>>[/code]\r\n[note]You don't need to call [b]list [/b]on the [b]range [/b]object when it is used in a [b]for [/b]loop, because it isn't being indexed, so a list isn't required.[/note]"}]}}