{"lesson":{"id":2388,"name":"Set Operations","type":0,"mode":1,"videoID":null,"tags":"sets","quizzes":[{"id":4776,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106666,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of the following code?\r\nlet a: Set = [\"A\", \"B\", \"C\"]\r\nlet b: Set = [\"B\", \"D\", \"E\", \"A\"]\r\nprint(b.subtract(a).count)","textContent":"[h1]Set Operations[/h1]\r\n\r\nSwift allows you to efficiently perform fundamental [b]set operations[/b], such as combining sets, determining which values two sets have in common, or determining whether two sets contain all, some, or none of the same values.\r\n\r\n[h2]Fundamental Set Operations[/h2]\r\n\r\nThe illustration below depicts sets [b]a[/b] and [b]b[/b], and shows the results of various set operations, as represented by the shaded regions:[img id=\"3031\" width=\"100%\"]      \r\nThe [b]intersect [/b]method creates a new set, with only the values common to both sets.\r\nThe [b]exclusiveOr [/b]method creates a new set with values in either set, but not both.\r\nThe [b]union [/b]method creates a new set with all of the values in both sets.\r\nThe [b]subtract [/b]method creates a new set with values not in the specified set.\r\n\r\nFor example, to combine the two sets: [code format=\"swift\" ]let oddDigits: Set = [1, 3, 5, 7, 9]\r\nlet evenDigits: Set = [0, 2, 4, 6, 8]\r\n \r\noddDigits.union(evenDigits).sort()\r\n// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9][/code]"},{"id":4777,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":59560,"text":"isSubsetOf","isCorrect":true,"properties":{}},{"id":59561,"text":"Set","isCorrect":true,"properties":{}},{"id":59562,"text":"intersect","isCorrect":true,"properties":{}},{"id":59563,"text":"union","isCorrect":false,"properties":{}},{"id":59564,"text":"subtract","isCorrect":false,"properties":{}},{"id":59565,"text":"isSupersetOf","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to create a new set \"c\", with only the values common to both \"a\" and \"b\", if not all of the values of set \"a\" are contained in set \"b\".\r\n[!raw!]\r\nlet a: Set = [1, 2, 3]\r\nlet b: Set = [3, 5, 2]\r\nif ! a.{0}(b) {\r\n   let c: {1} = a.{2}(b)\r\n}","textContent":"[h1]Set Membership and Equality[/h1]\r\n\r\nThe illustration below depicts three sets: a, b, and c. The overlapping regions represent the elements that are shared among sets.\r\nSet a is a [b]superset [/b]of set b, because a contains all elements in b. \r\nConversely, set b is a [b]subset [/b]of set a, because all elements in b are also contained by a.\r\nSets b and c are [b]disjointed [/b]with one another, because they share no elements in common. [img id=\"983\" width=\"100%\"] \r\n[b]\"is equal\"[/b] operator (==): Determines whether two sets contain all of the same values.\r\n[b]isSubsetOf [/b]method: Determines whether all of the values of a set are contained in the specified set.\r\n[b]isSupersetOf [/b]method: Determines whether a set contains all of the values in a specified set.\r\n[b]isStrictSubsetOf [/b]or [b]isStrictSupersetOf [/b]method: Determines whether a set is a subset or superset of, but not equal to, a specified set.\r\n[b]isDisjointWith [/b]method: determines whether two sets have any values in common.\r\n[note]Spend a little time playing with the methods to learn and understand their functions.[/note]"}]}}