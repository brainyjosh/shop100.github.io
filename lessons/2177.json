{"lesson":{"id":2177,"name":"Runtime vs. Checked Exceptions","type":0,"mode":1,"videoID":"KIjZaST0rxc","tags":"exceptions","quizzes":[{"id":4307,"number":1,"videoStart":21.0,"videoEnd":273.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99692,"text":"Checked","isCorrect":true,"properties":{}},{"id":99693,"text":"Runtime","isCorrect":false,"properties":{}},{"id":99694,"text":"Both checked and runtime","isCorrect":false,"properties":{}},{"id":99695,"text":"NullPointerException","isCorrect":false,"properties":{}}],"question":"If not handled, which exception types prevent your program from compiling?","textContent":"[h1]Types of Exceptions[/h1]\r\n\r\nThere are two exception types, [b]checked [/b]and [b]unchecked [/b](also called runtime). The main difference is that checked exceptions are checked when compiled, while unchecked exceptions are checked at runtime.\r\nAs mentioned in our previous lesson, Thread.sleep() throws an InterruptedException. This is an example of a [b]checked [/b]exception. Your code will not compile until you've handled the exception. [img id=\"2879\" width=\"80%\"]\r\n[code format=\"java\" ]public class MyClass {\r\n  public static void main(String[ ] args) {\r\n    try {\r\n      [b]Thread.sleep(1000)[/b];\r\n    } catch (InterruptedException e) {\r\n      //some code\r\n    }\r\n  }\r\n}[/code]\r\n[b][/b]We have seen examples of [b]unchecked [/b]exceptions, which are checked at runtime, in previous lessons. Example (when attempting to divide by 0):[code format=\"java\" codeId=\"792\"]public class MyClass {\r\n  public static void main(String[ ] args) {\r\n    int value = 7;\r\n    value = value / 0;\r\n  }\r\n}\r\n/*\r\nException in thread \"main\" java.lang.ArithmeticException: / by zero\r\n  at MyClass.main(MyClass.java:4)\r\n*/[/code]"}]}}