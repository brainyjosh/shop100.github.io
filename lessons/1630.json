{"lesson":{"id":1630,"name":"Introduction to Pointers","type":0,"mode":1,"videoID":"Fa6S8Pz924k","tags":"pointers","quizzes":[{"id":2858,"number":1,"videoStart":4.0,"videoEnd":106.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106196,"text":"&","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Type in the missing operator to print the 'fish' variable's address to the screen.\r\n[!raw!]\r\nint fish = 5;\r\ncout << {0}fish << endl;","textContent":"[h1]Pointers[/h1]\r\n\r\nEvery variable is a [b]memory [/b]location, which has its [b]address [/b]defined. \r\nThat address can be accessed using the [b]ampersand (&)[/b] operator (also called the address-of operator), which denotes an[b] address in memory[/b].\r\n\r\n[b]For example:[/b][code format=\"cpp\" codeId=\"222\"]int score = 5;\r\ncout << [b]&[/b]score << endl;\r\n\r\n//Outputs \"0x29fee8\"[/code]\r\n[note]This outputs the [b]memory address[/b], which stores the variable [b]score[/b].[/note]"},{"id":2860,"number":2,"videoStart":106.0,"videoEnd":157.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":77941,"text":"A header file","isCorrect":false,"properties":{}},{"id":77942,"text":"A function","isCorrect":false,"properties":{}},{"id":77943,"text":"A data type that contains an address","isCorrect":true,"properties":{}}],"question":"What is a pointer?","textContent":"[h1]Pointers[/h1]\r\n\r\nA [b]pointer [/b]is a variable, with the address of another variable as its value.\r\nIn C++, pointers help make certain tasks easier to perform. Other tasks, such as dynamic memory allocation, cannot be performed without using pointers.\r\n\r\nAll pointers share the same data type - a long [b]hexadecimal [/b]number that represents a memory address.\r\n\u000b[note]The only difference between pointers of different data types is the data type of the variable that the pointer points to.[/note]"},{"id":2861,"number":3,"videoStart":158.0,"videoEnd":205.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":94832,"text":"*","isCorrect":false,"properties":{"prefix":"int ","postfix":"ptr;"}}],"question":"Type in the missing symbol to make the 'ptr' variable a pointer to int.","textContent":"[h1]Pointers[/h1]\r\n\r\nA [b]pointer [/b]is a variable, and like any other variable, it must be declared before you can work with it. \r\nThe [b]asterisk [/b]sign is used to declare a pointer (the same asterisk that you use for multiplication), however, in this statement the asterisk is being used to designate a variable as a pointer. \r\nFollowing are valid pointer declarations: [code format=\"cpp\"]int *ip;  // pointer to an integer\r\ndouble *dp;   // pointer to a double\r\nfloat *fp;  // pointer to a float\r\nchar *ch;  // pointer to a character[/code]\r\nJust like with variables, we give the pointers a name and define the type, to which the pointer points to.\r\n[note]The asterisk sign can be placed next to the data type, or the variable name, or in the middle.[/note]"},{"id":2862,"number":4,"videoStart":205.0,"videoEnd":338.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97704,"text":"*","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":97705,"text":"&","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Type in the missing parts to declare a pointer to int which points to variable var.\r\n[!raw!]\r\nint var = 5;\r\nint {0} ptr = {1}var;","textContent":"[h1]Using Pointers[/h1]\r\n\r\nHere, we assign the address of a variable to the pointer.[code format=\"cpp\" codeId=\"223\"]int score = 5;\r\nint *scorePtr;\r\n[b]scorePtr = &score;[/b]\r\n\r\ncout << scorePtr << endl;\r\n\r\n//Outputs \"0x29fee8\"[/code]\r\nThe code above declares a pointer to an integer called [b]scorePtr[/b], and assigns to it the memory location of the [b]score [/b]variable using the ampersand (address-of) operator.\r\n[note]Now, [b]scorePtr's [/b]value is the memory location of [b]score[/b].[/note]"}]}}