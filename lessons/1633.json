{"lesson":{"id":1633,"name":"The sizeof() Operator","type":0,"mode":1,"videoID":"_5EEHKkvv1s","tags":"sizeof","quizzes":[{"id":2875,"number":1,"videoStart":4.0,"videoEnd":164.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97735,"text":"sizeof","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Use the sizeof() operator to print the size of the char variable to the screen.\r\n[!raw!]\r\nchar c;\r\ncout << {0}(c) << endl;","textContent":"[h1]sizeof[/h1]\r\n\r\nWhile the size allocated for varying data types depends on the architecture of the computer you use to run your programs, C++ does guarantee a minimum size for the basic data types:  [img id=\"2460\" width=\"100%\"]\r\nThe [b]sizeof [/b]operator can be used to get a variable or data type's size, in bytes.\r\n[b]Syntax:[/b] [code format=\"cpp\" ][b]sizeof [/b](data type)[/code]\r\nThe [b]sizeof [/b]operator determines and returns the size of either a type or a variable in bytes. \r\n[b]For example:[/b] [code format=\"cpp\" codeId=\"228\"]cout << \"char: \" << sizeof(char) << endl;\r\ncout << \"int: \" << sizeof(int) << endl;\r\ncout << \"float: \" << sizeof(float) << endl;\r\ncout << \"double: \" << sizeof(double) << endl;\r\nint var = 50;\r\ncout << \"var: \" << sizeof(var) << endl;\r\n\r\n/* Outputs\r\nchar: 1\r\nint: 4\r\nfloat: 4\r\ndouble: 8\r\nvar: 4\r\n*/ [/code]\r\n[note]Output values may vary, according to the computer and compiler used.[/note]"},{"id":2878,"number":2,"videoStart":170.0,"videoEnd":341.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97738,"text":"10","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":97739,"text":"arr","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Type in a code to declare an array of 10 doubles and print the array's size to the screen using the sizeof() operator.\r\n[!raw!]\r\ndouble arr[{0}];\r\ncout << sizeof({1}) << endl;","textContent":"[h1]Size of an Array[/h1]\r\n\r\nThe C++ [b]sizeof [/b]operator is also used to determine the size of an [b]array[/b].\r\n[b]For example:[/b] [code format=\"cpp\" codeId=\"229\"]double myArr[10];\r\ncout << [b]sizeof[/b](myArr) << endl; \r\n\r\n//Outputs 80[/code]\r\nOn our machine, [b]double [/b]takes 8 bytes. The array stores 10 doubles, so the entire array occupies 80 (8*10) bytes in the memory. \r\n\r\nIn addition, divide the total number of bytes in the array by the number of bytes in a single element to learn how many elements you have in the array.\r\n[b]For example:[/b] [code format=\"cpp\" codeId=\"230\"]int numbers[100];\r\ncout << [b]sizeof[/b](numbers) / [b]sizeof[/b](numbers[0]);\r\n\r\n// Outputs 100[/code]"}]}}