{"lesson":{"id":2438,"name":"Modules","type":0,"mode":1,"videoID":null,"tags":"modules","quizzes":[{"id":5025,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98073,"text":"math","isCorrect":true,"properties":{}},{"id":98074,"text":"num","isCorrect":false,"properties":{}},{"id":98075,"text":"sqrt","isCorrect":false,"properties":{}}],"question":"Which module is being used in this code?\r\nimport math\r\nnum = 10\r\nprint (math.sqrt(num))","textContent":"[h1]Modules[/h1]\r\n\r\n[b]Modules [/b]are pieces of code that other people have written to fulfill common tasks, such as generating random numbers, performing mathematical operations, etc.\r\n\r\nThe basic way to use a module is to add [b]import module_name[/b] at the top of your code,  and then using [b]module_name.var [/b]to access functions and values with the name [b]var [/b]in the module.\r\nFor example, the following example uses the [b]random [/b]module to generate random numbers: [code format=\"py\" codeId=\"340\"][b]import random[/b]\r\n\r\nfor i in range(5):\r\n   value = [b]random[/b].[b]randint[/b](1, 6)\r\n   print(value)[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\n2\r\n3\r\n6\r\n5\r\n4\r\n>>>[/code]\r\n[note]The code uses the [b]randint [/b]function defined in the [b]random [/b]module to print 5 random numbers in the range 1 to 6.[/note]"},{"id":5026,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104630,"text":"from","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":104631,"text":"sqrt,","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to import only the sqrt and cos functions from the math module:\r\n[!raw!]\r\n{0} math import {1} cos","textContent":"[h1]Modules[/h1]\r\n\r\nThere is another kind of [b]import [/b]that can be used if you only need certain functions from a module.\r\nThese take the form [b]from module_name import var[/b], and then [b]var[/b] can be used as if it were defined normally in your code. \r\nFor example, to import only the [b]pi [/b]constant from the [b]math [/b]module: [code format=\"py\" codeId=\"341\"][b]from [/b]math [b]import [/b]pi\r\n\r\nprint(pi)[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\n3.141592653589793\r\n>>>[/code]\r\nUse a comma separated list to import multiple objects. For example: [code format=\"py\" ]from math import pi, sqrt[/code]\r\n[note]* imports all objects from a module. For example: [b]from math import *[/b]\r\nThis is generally discouraged, as it confuses variables in your code with variables in the external module.[/note]"},{"id":5027,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95867,"text":"ModuleError","isCorrect":false,"properties":{}},{"id":95868,"text":"UnknownModuleError","isCorrect":false,"properties":{}},{"id":95869,"text":"ImportError","isCorrect":true,"properties":{}}],"question":"What error is caused by importing an unknown module?","textContent":"[h1]Modules[/h1]\r\n\r\nTrying to import a module that isn't available causes an ImportError. [code format=\"py\"]import some_module[/code]\r\n[b]Result:[/b][code format=\"raw\"]>>>\r\nImportError: No module named 'some_module'\r\n>>>[/code]"},{"id":5028,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98078,"text":"25","isCorrect":false,"properties":{}},{"id":98079,"text":"5","isCorrect":false,"properties":{}},{"id":98080,"text":"An error occurs","isCorrect":true,"properties":{}}],"question":"What is the output of this code?\r\nimport math as m\r\nprint(math.sqrt(25))","textContent":"[h1]Modules[/h1]\r\n\r\nYou can import a module or object under a different name using the [b]as[/b] keyword. This is mainly used when a module or object has a long or confusing name.\r\n[b]For example:[/b] [code format=\"py\" codeId=\"342\"]from math import sqrt [b]as [/b]square_root\r\nprint(square_root(100))[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\n10.0\r\n>>>[/code]"}]}}