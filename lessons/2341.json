{"lesson":{"id":2341,"name":"while Loops","type":0,"mode":1,"videoID":null,"tags":"loops","quizzes":[{"id":4753,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96551,"text":"while","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":96552,"text":"{","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":96553,"text":"}","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to create a valid while loop.\r\n[!raw!]\r\nvar x = 10\r\n{0} x > 0 {1}\r\n   print(x)   \r\n   x--\r\n{2}","textContent":"[h1]The while Loop[/h1]\r\n\r\nA [b]while [/b]loop performs a set of statements until a condition becomes false. These kinds of loops are best used when the number of iterations is not known before the first iteration begins.\r\n[b]while [/b]evaluates its condition at the start of each pass through the loop.\r\nThe while loop is demonstrated in the example below: [code format=\"swift\"]while a < b {\r\n   print(a)\r\n   a++\r\n}[/code]\r\n[note]The code will execute until the a++ statement renders a < b as [b]false[/b].[/note]"},{"id":4754,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96554,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"How many times will the following loop print to the screen?\r\nvar i = 1, n = 3\r\nrepeat {\r\n   print(i)\r\n   i++\r\n} while i < n","textContent":"[h1]Repeat-While[/h1]\r\n\r\nThe [b]repeat-while[/b] loop is the alternate while loop. It first makes a single pass through the loop block, then considers the loop's condition, and repeats the loop until the condition shows as false.[code format=\"swift\"][b]repeat [/b]{\r\n   x--\r\n} [b]while [/b]x > 0[/code]\r\n[note]Swift's [b]repeat-while[/b] loop is similar to a [b]do-while[/b] loop in other languages.[/note]"}]}}