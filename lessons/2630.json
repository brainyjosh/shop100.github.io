{"lesson":{"id":2630,"name":"Array Properties & Methods","type":0,"mode":1,"videoID":null,"tags":"arrays","quizzes":[{"id":5515,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106274,"text":"3","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\nint[ , , ] a = new int[2, 3, 4];\r\nConsole.Write(a.Rank);","textContent":"[h1]Arrays Properties[/h1]\r\n\r\nThe Array class in C# provides various properties and methods to work with arrays. \r\nFor example, the [b]Length [/b]and [b]Rank [/b]properties return the number of elements and the number of dimensions of the array, respectively. You can access them using the dot syntax, just like any class members: [code format=\"cs\" codeId=\"879\"]int[ ] arr = {2, 4, 7};\r\nConsole.WriteLine([b]arr.Length[/b]); \r\n//Outputs 3\r\n\r\nConsole.WriteLine([b]arr.Rank[/b]); \r\n//Outputs 1[/code]\r\nThe [b]Length [/b]property can be useful in [b]for [/b]loops where you need to specify the number of times the loop should run.\r\n[b]For example: [/b][code format=\"cs\" codeId=\"880\"]int[ ] arr = {2, 4, 7};\r\nfor(int k=0; [b]k<arr.Length[/b]; k++) {\r\n  Console.WriteLine(arr[k]);\r\n}[/code]"},{"id":5517,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106273,"text":"6","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\nint[ ] a = {4, 6, 5, 2};\r\nint x = a[0]+a.Min();\r\nConsole.Write(x);","textContent":"[h1]Array Methods[/h1]\r\n\r\nThere are a number of methods available for arrays.\r\n[b]Max [/b]returns the largest value.\r\n[b]Min [/b]returns the smallest value.\r\n[b]Sum [/b]returns the sum of all elements.\r\n\r\n[b]For example:[/b] [code format=\"cs\" codeId=\"881\"]int[ ] arr = { 2, 4, 7, 1};\r\nConsole.WriteLine(arr.[b]Max[/b]());\r\n//Outputs 7\r\n\r\nConsole.WriteLine(arr.[b]Min[/b]());\r\n//Outputs 1\r\n\r\nConsole.WriteLine(arr.[b]Sum[/b]());\r\n//Outputs 14\r\n[/code]\r\n[note]C# also provides a static Array class with additional methods. You will learn about those in the next module.[/note]"}]}}