{"lesson":{"id":2753,"name":"Selecting Elements","type":0,"mode":1,"videoID":null,"tags":"dom","quizzes":[{"id":5835,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":109591,"text":"var","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":109592,"text":"text","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":109593,"text":"ob","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to select the element with id=\"text\" and change its content to \"Hi\".\r\n[!raw!]\r\n{0} ob = document.getElementById(\"{1}\");\r\n{2}.innerHTML = \"Hi\";","textContent":"[h1]Selecting Elements[/h1]\r\n\r\nAll HTML elements are [b]objects[/b]. And as we know every object has [b]properties [/b]and [b]methods[/b].\r\nThe [b]document [/b]object has methods that allow you to select the desired HTML element.\r\nThese three methods are the most commonly used for selecting HTML elements: [code format=\"js\" ]//finds element by id\r\ndocument.[b]getElementById[/b](id) \r\n\r\n//finds elements by class name\r\ndocument.[b]getElementsByClassName[/b](name) \r\n\r\n//finds elements by tag name\r\ndocument.[b]getElementsByTagName[/b](name)[/code]\r\nIn the example below, the [b]getElementById [/b]method is used to select the element with[b] id=\"demo\"[/b] and change its content: [code format=\"js\" ]var elem = document.[b]getElementById[/b](\"demo\");\r\nelem.innerHTML = \"Hello World!\";[/code]\r\n[note]The example above assumes that the HTML contains an element with id=\"demo\", for example <div id=\"demo\"></div>.[/note]"},{"id":5836,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":109600,"text":"div","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":109601,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to select all div elements and alert the content of the third div.\r\n[!raw!]\r\nvar arr = document.\r\n      getElementsByTagName(\"{0}\");\r\nalert(arr[{1}].innerHTML);","textContent":"[h1]Selecting Elements[/h1]\r\n\r\nThe [b]getElementsByClassName[/b]() method finds all elements by class name and returns them as an array.\r\nFor example, if our HTML page contained three elements with class=\"demo\", the following code would return all those elements as an array: [code format=\"js\" ]var arr =  document.[b]getElementsByClassName[/b](\"demo\");\r\n//accessing the second element\r\narr[1].innerHTML = \"Hi\";[/code]\r\nSimilarly, the [b]getElementsByTagName [/b]method returns all of the elements of the specified tag name as an array.\r\nThe following example gets all paragraph elements of the page and changes their content: [code format=\"html\" ]<p>hi</p>\r\n<p>hello</p>\r\n<p>hi</p>\r\n<script>\r\nvar arr = document.getElementsByTagName(\"p\");\r\nfor (var x = 0; x < arr.length; x++) {\r\n  arr[x].innerHTML = \"Hi there\";\r\n}\r\n</script>[/code]\r\nThe script will result in the following HTML:[code format=\"html\" ]<p>Hi there</p>\r\n<p>Hi there</p>\r\n<p>Hi there</p>[/code]\r\n[note]We used the [b]length [/b]property of the array to loop through all the selected elements in the above example.[/note]"},{"id":5837,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":109604,"text":"Yes","isCorrect":false,"properties":{}},{"id":109605,"text":"No","isCorrect":true,"properties":{}}],"question":"Can a node in the DOM have multiple parent nodes?","textContent":"[h1]Working with DOM[/h1]\r\n\r\nEach element in the DOM has a set of properties and methods that provide information about their relationships in the DOM:\r\nelement.[b]childNodes[/b] returns an array of an element's child nodes.\r\nelement.[b]firstChild [/b]returns the first child node of an element.\r\nelement.[b]lastChild [/b]returns the last child node of an element.\r\nelement.[b]hasChildNodes [/b]returns true if an element has any child nodes, otherwise false.\r\nelement.[b]nextSibling [/b]returns the next node at the same tree level.\r\nelement.[b]previousSibling [/b]returns the previous node at the same tree level.\r\nelement.[b]parentNode [/b]returns the parent node of an element.[b]\r\n[/b]\r\nWe can, for example, select all child nodes of an element and change their content:[code format=\"html\" codeId=\"951\"]<html>\r\n  <body>\r\n    <div id =\"demo\">\r\n      <p>some text</p>\r\n      <p>some other text</p>\r\n    </div>\r\n\r\n    <script>\r\n     var a = document.getElementById(\"demo\");\r\n     var arr = a.childNodes;\r\n     for(var x=0;x<arr.length;x++) {\r\n       arr[x].innerHTML = \"new text\";\r\n     }\r\n    </script>\r\n\r\n  </body>\r\n</html>[/code]\r\n[note]The code above changes the text of both paragraphs to \"new text\".[/note]"}]}}