{"lesson":{"id":1955,"name":"Separate Files for Classes","type":0,"mode":1,"videoID":"NTip15BHVZc","tags":"classes","quizzes":[{"id":3860,"number":1,"videoStart":12.0,"videoEnd":147.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99803,"text":"Header and Source","isCorrect":true,"properties":{}},{"id":99804,"text":"Header and Body","isCorrect":false,"properties":{}},{"id":99805,"text":"Class and Source","isCorrect":false,"properties":{}},{"id":99806,"text":"Header and Main","isCorrect":false,"properties":{}}],"question":"Which two files are usually defined for a class?","textContent":"[h1]Creating a New Class[/h1]\r\n\r\nIt is generally a good practice to define your new classes in separate files. This makes maintaining and reading the code easier.\r\nTo do this, use the following steps in CodeBlocks:\r\nClick [b]File[/b]->[b]New[/b]->[b]Class...[/b] \r\nGive your new class a name, uncheck \"Has destructor\" and check \"Header and implementation file shall be in same folder\", then click the \"[b]Create[/b]\" button. [img id=\"2430\" width=\"100%\"]\r\nNote that [b]two new files[/b] have been added to your project: [img id=\"2432\" width=\"100%\"]\r\n[note]The new files act as templates for our new class.\r\n- [b]MyClass.h[/b] is the [b]header [/b]file.\r\n- [b]MyClass.cpp [/b]is the [b]source [/b]file.[/note]"},{"id":3861,"number":2,"videoStart":148.0,"videoEnd":242.5,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95024,"text":"Function prototypes and variable declaration","isCorrect":true,"properties":{}},{"id":95025,"text":"Source code of the functions","isCorrect":false,"properties":{}},{"id":95026,"text":"Constructors only","isCorrect":false,"properties":{}},{"id":95027,"text":"Nothing","isCorrect":false,"properties":{}}],"question":"What is the header file used for?","textContent":"[h1]Source & Header[/h1]\r\n\r\nThe header file (.h) holds the function declarations (prototypes) and variable declarations. \r\nIt currently includes a template for our new [b]MyClass [/b]class, with one default constructor.\r\n[u][b]MyClass.h[/b][/u] [code format=\"cpp\"]#ifndef MYCLASS_H\r\n#define MYCLASS_H\r\n\r\nclass MyClass\r\n{\r\n  public:\r\n    MyClass();\r\n  protected:\r\n  private:\r\n};\r\n\r\n#endif // MYCLASS_H[/code]\r\nThe implementation of the class and its methods go into the source file (.cpp).\r\nCurrently it includes just an empty constructor.\r\n[u][b]MyClass.cpp[/b][/u] [code format=\"cpp\"]#include \"MyClass.h\"\r\n\r\nMyClass::MyClass()\r\n{\r\n   //ctor\r\n}[/code]\r\n[note]The #ifndef and #define statements in the header file will be discussed in the upcoming lessons.[/note]"},{"id":3862,"number":3,"videoStart":255.0,"videoEnd":325.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95028,"text":"demo","isCorrect":true,"properties":{}},{"id":95029,"text":"test","isCorrect":true,"properties":{}},{"id":95030,"text":"class","isCorrect":false,"properties":{}},{"id":95031,"text":"function","isCorrect":false,"properties":{}},{"id":95032,"text":"make","isCorrect":false,"properties":{}}],"question":"Create a function called ''test'' belonging to a class called ''demo''.\r\n[!raw!]\r\n{0}::{1}()\r\n{\r\n}","textContent":"[h1]Scope Resolution Operator[/h1]\r\n\r\nThe [b]double colon[/b] in the source file (.cpp) is called the [b]scope resolution operator[/b], and it's used for the constructor definition:[code format=\"cpp\"]#include \"MyClass.h\"\r\n\r\nMyClass[b]::[/b]MyClass()\r\n{\r\n   //ctor\r\n}[/code]\r\nThe scope resolution operator is used to define a particular class' member functions, which have already been declared. Remember that we defined the constructor prototype in the [b]header file[/b].\r\n[note]So, basically, [b]MyClass::MyClass() [/b]refers to the [b]MyClass() [/b]member function - or, in this case, constructor - of  the [b]MyClass [/b]class.[/note]"},{"id":3863,"number":4,"videoStart":361.0,"videoEnd":449.3,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95033,"text":"The class's header file","isCorrect":true,"properties":{}},{"id":95034,"text":"The class's cpp file","isCorrect":false,"properties":{}},{"id":95035,"text":"Both, the header and source files","isCorrect":false,"properties":{}}],"question":"To use a class, what should be included in the main.cpp?","textContent":"[h1]Source & Header[/h1]\r\n\r\nTo use our classes in our main, we need to include the [b]header[/b] file. \r\n\r\nFor example, to use our newly created [b]MyClass[/b] in main: [code format=\"cpp\"]#include <iostream>\r\n[b]#include \"MyClass.h\"[/b]\r\nusing namespace std;\r\n\r\nint main() {\r\n  [b]MyClass obj;[/b]\r\n}[/code]\r\n[note]The [b]header[/b] declares \"what\" a class (or whatever is being implemented) will do, while the [b]cpp source[/b] file defines \"how\" it will perform those features.[/note]"}]}}