{"lesson":{"id":2284,"name":"Code Reuse","type":0,"mode":1,"videoID":null,"tags":"functions","quizzes":[{"id":4584,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":87557,"text":"easier to maintain","isCorrect":true,"properties":{}},{"id":87558,"text":"loop forever","isCorrect":false,"properties":{}},{"id":87559,"text":"bad and repetitive","isCorrect":false,"properties":{}}],"question":"Following the DRY principle makes the code:","textContent":"[h1]Reusing Code[/h1]\r\n\r\n[b]Code reuse [/b]is a very important part of programming in any language. Increasing code size makes it harder to maintain. \r\nFor a large programming project to be successful, it is essential to abide by the [b]Don't Repeat Yourself[/b], or [b]DRY[/b], principle. We've already looked at one way of doing this: by using loops. In this module, we will explore two more: functions and modules.\r\n[note]Bad, repetitive code is said to abide by the [b]WET [/b]principle, which stands for [b]Write Everything Twice[/b], or [b]We Enjoy Typing[/b].[/note]"},{"id":5017,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95833,"text":"3","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"How many arguments are in this function call?\r\nrange(0, 100, 5)","textContent":"[h1]Functions[/h1]\r\n\r\nYou've already used [b]functions [/b]in previous lessons. \r\nAny statement that consists of a word followed by information in [b]parentheses [/b]is a function call.\r\nHere are some examples that you've already seen:[code format=\"py\"][b]print[/b](\"Hello world!\")\r\n[b]range[/b](2, 20)\r\n[b]str[/b](12)\r\n[b]range[/b](10, 20, 3)[/code]\r\n[note]The words in front of the parentheses are function [b]names[/b], and the comma-separated values inside the parentheses are function [b]arguments[/b]. [/note]"}]}}