{"lesson":{"id":2441,"name":"Exception Handling","type":0,"mode":1,"videoID":null,"tags":"exceptions","quizzes":[{"id":5039,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98084,"text":"5.0","isCorrect":false,"properties":{}},{"id":98085,"text":"5.0 Finished","isCorrect":true,"properties":{}},{"id":98086,"text":"Error Finished","isCorrect":false,"properties":{}}],"question":"What is the output of this code?\r\ntry:\r\n  variable = 10\r\n  print (10 / 2)\r\nexcept ZeroDivisionError:\r\n  print(\"Error\")\r\nprint(\"Finished\")","textContent":"[h1]Exception Handling[/h1]\r\n\r\nTo handle exceptions, and to call code when an exception occurs, you can use a[b] try/except[/b] statement.\r\nThe [b]try[/b] block contains code that might throw an exception. If that exception occurs, the code in the [b]try[/b] block stops being executed, and the code in the [b]except[/b] block is run. If no error occurs, the code in the [b]except[/b] block doesn't run.\r\n[b]For example:[/b] [code format=\"py\" codeId=\"344\"][b]try:[/b]\r\n   num1 = 7\r\n   num2 = 0\r\n   print (num1 / num2)\r\n   print(\"Done calculation\")\r\n[b]except ZeroDivisionError:[/b]\r\n   print(\"An error occurred\")\r\n   print(\"due to zero division\")[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nAn error occurred\r\ndue to zero division\r\n>>>[/code]\r\n[note]In the code above, the except statement defines the type of exception to handle (in our case, the [b]ZeroDivisionError[/b]).[/note]"},{"id":5040,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104425,"text":"Divided by zero","isCorrect":true,"properties":{}},{"id":104426,"text":"ValueError or TypeError occurred","isCorrect":false,"properties":{}},{"id":104427,"text":"Divided by zero ValueError or TypeError occurred","isCorrect":false,"properties":{}}],"question":"What is the output of this code?\r\ntry:\r\n  meaning = 42\r\n  print(meaning / 0)\r\n  print(\"the meaning of life\")\r\nexcept (ValueError, TypeError):\r\n  print(\"ValueError or TypeError occurred\")\r\nexcept ZeroDivisionError:\r\n  print(\"Divided by zero\")","textContent":"[h1]Exception Handling[/h1]\r\n\r\nA [b]try [/b]statement can have multiple different [b]except [/b]blocks to handle different exceptions.\r\nMultiple exceptions can also be put into a single [b]except [/b]block using parentheses, to have the [b]except [/b]block handle all of them.[code format=\"py\" codeId=\"345\"][b]try:[/b]\r\n   variable = 10\r\n   print(variable + \"hello\")\r\n   print(variable / 2)\r\n[b]except [/b]ZeroDivisionError:\r\n   print(\"Divided by zero\")\r\n[b]except [/b](ValueError, TypeError):\r\n   print(\"Error occurred\")[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nError occurred\r\n>>>[/code]"},{"id":5041,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104428,"text":"try:","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":104429,"text":"except:","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to handle all possible exceptions.\r\n[!raw!]\r\n{0}\r\n  num1 = input(\":\")\r\n  num2 = input(\":\")\r\n  print(float(num1)/float(num2))\r\n{1}\r\n  print(\"Invalid input\")","textContent":"[h1]Exception Handling[/h1]\r\n\r\nAn [b]except[/b] statement without any exception specified will catch all errors. These should be used sparingly, as they can catch unexpected errors and hide programming mistakes.\r\n[b]For example:[/b][code format=\"py\" codeId=\"346\"][b]try:[/b]\r\n   word = \"spam\"\r\n   print(word / 0)\r\n[b]except:[/b]\r\n   print(\"An error occurred\")[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nAn error occurred\r\n>>>[/code]\r\n[note]Exception handling is particularly useful when dealing with user input.[/note]"}]}}