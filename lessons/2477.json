{"lesson":{"id":2477,"name":"More Metacharacters","type":0,"mode":1,"videoID":null,"tags":"regular-expressions","quizzes":[{"id":5165,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104662,"text":"Zero or more repetitions of \"a\" or \"^\"","isCorrect":true,"properties":{}},{"id":104663,"text":"Zero or more repetitions of any characters other than \"a\"","isCorrect":false,"properties":{}},{"id":104664,"text":"Zero or more repetitions of any character","isCorrect":false,"properties":{}}],"question":"What would [a^]* match?","textContent":"[h1]Metacharacters[/h1]\r\n\r\nSome more metacharacters are [b]*[/b],[b] +[/b],[b] ?[/b],[b] { [/b]and[b] }[/b].\r\nThese specify numbers of repetitions. \r\nThe metacharacter [b]*[/b] means \"zero or more repetitions of the previous thing\". It tries to match as many repetitions as possible. The \"previous thing\" can be a single character, a class, or a group of characters in [b]parentheses[/b].\r\n[b]Example:[/b][code format=\"py\" codeId=\"430\"]import re\r\n\r\n[b]pattern = r\"egg(spam)*\"[/b]\r\n\r\nif re.match(pattern, \"egg\"):\r\n   print(\"Match 1\")\r\n\r\nif re.match(pattern, \"eggspamspamegg\"):\r\n   print(\"Match 2\")\r\n\r\nif re.match(pattern, \"spam\"):\r\n   print(\"Match 3\")[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nMatch 1\r\nMatch 2\r\n>>>[/code]\r\n[note]The example above matches strings that start with \"[b]egg\" [/b]and follow with zero or more \"[b]spam\"[/b]s.[/note]"},{"id":5166,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104665,"text":"+","isCorrect":false,"properties":{"prefix":"r\"(42)","postfix":"$\""}}],"question":"Fill in the blanks to create a pattern that matches strings that contain one or more 42s.","textContent":"[h1]Metacharacters[/h1]\r\n\r\nThe metacharacter [b]+[/b] is very similar to [b]*[/b], except it means \"[b]one [/b]or more repetitions\", as opposed to \"zero or more repetitions\".\r\n[b]Example:[/b] [code format=\"py\" codeId=\"431\"]import re\r\n\r\n[b]pattern = r\"g+\"[/b]\r\n\r\nif re.match(pattern, \"g\"):\r\n   print(\"Match 1\")\r\n\r\nif re.match(pattern, \"gggggggggggggg\"):\r\n   print(\"Match 2\")\r\n\r\nif re.match(pattern, \"abc\"):\r\n   print(\"Match 3\")[/code]\r\n[b]Result:[/b][code format=\"raw\" ]>>>\r\nMatch 1\r\nMatch 2\r\n>>>[/code]\r\n[note]To summarize:\r\n* matches 0 or more occurrences of the preceding expression.\r\n+ matches 1 or more occurrence of the preceding expression.[/note]"},{"id":5167,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104666,"text":"(","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":104667,"text":"?","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to match both 'color' and 'colour'.\r\n[!raw!]\r\npattern = r\"colo{0}u){1}r\"","textContent":"[h1]Metacharacters[/h1]\r\n\r\nThe metacharacter [b]?[/b] means \"zero or one repetitions\".\r\n[b]Example:[/b] [code format=\"py\" codeId=\"432\"]import re\r\n\r\n[b]pattern = r\"ice(-)?cream\"[/b]\r\n\r\nif re.match(pattern, \"ice-cream\"):\r\n   print(\"Match 1\")\r\n\r\nif re.match(pattern, \"icecream\"):\r\n   print(\"Match 2\")\r\n\r\nif re.match(pattern, \"sausages\"):\r\n   print(\"Match 3\")\r\n\r\nif re.match(pattern, \"ice--ice\"):\r\n   print(\"Match 4\")[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nMatch 1\r\nMatch 2\r\n>>>[/code]"},{"id":5168,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106708,"text":"{0,}","isCorrect":false,"properties":{}},{"id":106709,"text":"{0, 1}","isCorrect":false,"properties":{}},{"id":106710,"text":"{1,}","isCorrect":true,"properties":{}}],"question":"Which of these is the same as the metacharacter '+'?","textContent":"[h1]Curly Braces[/h1]\r\n\r\n[b]Curly braces [/b]can be used to represent the number of repetitions between two numbers.\r\nThe regex [b]{x,y}[/b] means \"between x and y  repetitions of something\". \r\nHence [b]{0,1}[/b] is the same thing as [b]?[/b].\r\nIf the first number is missing, it is taken to be zero. If the second number is missing, it is taken to be infinity.\r\n[b]Example:[/b] [code format=\"py\" codeId=\"433\"]import re\r\n\r\n[b]pattern = r\"9{1,3}$\"[/b]\r\n\r\nif re.match(pattern, \"9\"):\r\n   print(\"Match 1\")\r\n\r\nif re.match(pattern, \"999\"):\r\n   print(\"Match 2\")\r\n\r\nif re.match(pattern, \"9999\"):\r\n   print(\"Match 3\")[/code]\r\n[b]Result:[/b][code format=\"raw\" ]>>>\r\nMatch 1\r\nMatch 2\r\n>>>[/code]\r\n[note][b]\"9{1,3}$\"[/b] matches string that have 1 to 3 nines.[/note]"}]}}