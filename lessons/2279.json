{"lesson":{"id":2279,"name":"Boolean Logic","type":0,"mode":1,"videoID":null,"tags":"boolean-logic","quizzes":[{"id":4577,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99836,"text":"true false","isCorrect":false,"properties":{}},{"id":99837,"text":"true","isCorrect":true,"properties":{}},{"id":99838,"text":"false","isCorrect":false,"properties":{}}],"question":"What is the result of this code?\r\nif (1 == 1) and (2 + 2 > 3):\r\n  print(\"true\")\r\nelse:\r\n  print(\"false\")","textContent":"[h1]Boolean Logic[/h1]\r\n\r\n[b]Boolean logic[/b] is used to make more complicated conditions for [b]if[/b] statements that rely on more than one condition. \r\nPython's Boolean operators are [b]and[/b], [b]or[/b], and [b]not[/b]. \r\nThe [b]and [/b]operator takes two arguments, and evaluates as [b]True [/b]if, and only if, both of its arguments are [b]True[/b]. Otherwise, it evaluates to [b]False[/b]. [code format=\"py\" codeId=\"303\"]>>> 1 == 1 [b]and [/b]2 == 2\r\n[b]True[/b]\r\n>>> 1 == 1 [b]and [/b]2 == 3\r\n[b]False[/b]\r\n>>> 1 != 1 [b]and [/b]2 == 2\r\n[b]False[/b]\r\n>>> 2 < 1 [b]and [/b]3 >  6\r\n[b]False[/b][/code]\r\n[note]Python uses words for its Boolean operators, whereas most other languages use symbols such as &&, || and !.[/note]"},{"id":4578,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97991,"text":"or","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":97992,"text":"print","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to print \"Welcome\".\r\n[!raw!]\r\nage = 15\r\nmoney = 500\r\nif age > 18 {0} money > 100:\r\n   {1}(\"Welcome\")","textContent":"[h1]Boolean Or[/h1]\r\n\r\nThe [b]or [/b]operator also takes two arguments. It evaluates to [b]True [/b]if either (or both) of its arguments are [b]True[/b], and [b]False [/b]if both arguments are [b]False[/b].[code format=\"py\" codeId=\"304\"]>>> 1 == 1 [b]or [/b]2 == 2\r\n[b]True[/b]\r\n>>> 1 == 1 [b]or [/b]2 == 3\r\n[b]True[/b]\r\n>>> 1 != 1 [b]or [/b]2 == 2\r\n[b]True[/b]\r\n>>> 2 < 1 [b]or [/b]3 >  6\r\n[b]False[/b][/code]"},{"id":4988,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97993,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the result of this code?\r\nif not True:\r\n   print(\"1\")\r\nelif not (1 + 1 == 3):\r\n   print(\"2\")\r\nelse:\r\n   print(\"3\")","textContent":"[h1]Boolean Not[/h1]\r\n\r\nUnlike other operators we've seen so far, [b]not [/b]only takes one argument, and inverts it. \r\nThe result of [b]not True[/b] is [b]False[/b], and [b]not False[/b] goes to [b]True[/b].[code format=\"py\" codeId=\"305\"]>>> [b]not [/b]1 == 1\r\n[b]False[/b]\r\n>>> [b]not [/b]1 > 7\r\n[b]True[/b][/code]\r\n[note]You can chain multiple conditional statements in an [b]if[/b] statement using the Boolean operators.[/note]"}]}}