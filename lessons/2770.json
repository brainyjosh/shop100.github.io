{"lesson":{"id":2770,"name":"Letter Frequency Counter","type":0,"mode":1,"videoID":null,"tags":null,"quizzes":[{"id":5893,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":113088,"text":"o","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\nstr = \"Hello there\"\r\nstr.downcase!\r\nputs str[4]","textContent":"[h1]Letter Frequency[/h1]\r\n\r\nLet's create a program that will count the frequency of letters (number of occurrences) in a given string. \r\nFirst we need a string:[code format=\"rb\" ]# a sample text\r\ntext = \"I am learning Ruby and it is fun!\"\r\n\r\ntext.downcase![/code]\r\nThe [b]downcase![/b] method is used to convert all letters in the string to lowercase.\r\n\r\nNext, we will need a hash to hold the letters as keys and the frequency of the letters as their corresponding values.\r\nFor that we need to create an empty hash and set the default value for all values to 0.[code format=\"rb\" ]freqs = {}\r\nfreqs.default = 0[/code]\r\n[note]The [b]default [/b]method is used to set the default value for the hash, meaning that any key that does not have a value assigned will be set to that value.[/note]"},{"id":5894,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":113090,"text":"5","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\ns = \"some text goes here\"\r\nc = 0\r\ns.each_char do |x| \r\n  c += 1 if x == \"e\"\r\nend\r\nputs c","textContent":"[h1]Letter Frequency[/h1]\r\n\r\nNext, we will need to iterate over each character in the string and calculate the number of occurrences in the hash. We can do that using the [b]each_char [/b]iterator: [code format=\"rb\" ]text.[b]each_char [/b]{ |char| freqs[char] += 1}[/code]\r\nDuring each iteration, the [b]char [/b]variable is assigned the corresponding character in our [b]text [/b]string and then the value of that character's frequency is incremented in the [b]freqs [/b]hash.\r\nSo, for example, if the letter \"c\" appears twice in the text, freqs[\"c\"] will be equal to 2 after the iterator executes.\r\nSo, [b]freqs [/b]will hold all the characters of the string with their corresponding occurrence number.\r\n\r\nTo show a nice result output in an alphabetical order, we can create a range of all letters and print their corresponding frequencies: [code format=\"rb\" ](\"a\"..\"z\").each {|x| puts \"#{x} : #{freqs[x]}\" }[/code]\r\nWe do this because not all letters of the alphabet are contained in our text.\r\n\r\n[b]The final code:[/b] [code format=\"rb\" codeId=\"1039\"]text = \"I am learning Ruby and it is fun!\"\r\ntext.downcase!\r\nfreqs = {}\r\nfreqs.default = 0\r\n\r\ntext.each_char { |char| freqs[char] += 1}\r\n\r\n(\"a\"..\"z\").each {|x| puts \"#{x} : #{freqs[x]}\" }[/code]\r\n[note]With just 6 lines of code we created a fully working letter frequency counter![/note]"}]}}