{"lesson":{"id":2816,"name":"animate()","type":0,"mode":1,"videoID":null,"tags":null,"quizzes":[{"id":6007,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":117312,"text":"padding-Left","isCorrect":false,"properties":{}},{"id":117313,"text":"paddingLeft","isCorrect":true,"properties":{}},{"id":117314,"text":"padding_Left","isCorrect":false,"properties":{}}],"question":"Which of the following can be used with the animate() method?","textContent":"[h1]animate()[/h1]\r\n\r\nThe .[b]animate()[/b] method lets you animate to a set value, or to a value relative to the current value.\r\nYou need to define the CSS properties to be animated as its parameter in JSON format ([b]\"key\":\"value\" [/b]pairs).\r\nThe second parameter defines the speed of the animation.\r\nFor example, the following code animates the [b]width [/b]property of the div in 1 second to the value 250px: [code format=\"js\" codeId=\"1139\"]$(\"div\").click(function() {\r\n  $(\"div\").[b]animate[/b]({width: '250px'}, 1000);\r\n});[/code]\r\nNote the JSON format for providing the CSS parameters. The JSON syntax was also used in the previous modules when manipulating CSS properties.\r\n[note]You can animate any CSS property using the above mentioned syntax, but there is one important thing to remember: all property names must be [b]camel-cased[/b] when used with the animate() method ([b]camelCase [/b]is the practice of writing compound words or phrases such that each word or abbreviation begins with a capital letter with the first word in lowercase).\r\nYou will need to write [b]paddingLeft [/b]instead of padding-left, [b]marginRight [/b]instead of margin-right, and so on. [/note]"},{"id":6126,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":117318,"text":"animate","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":117319,"text":",","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":117320,"text":"5000","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to animate the opacity and height properties of the div element in 5 seconds.\r\n[!raw!]\r\n$(\"div\").{0}({\r\n  opacity: 0.5{1}\r\n  height +=\"100px\"\r\n}, {2});","textContent":"[h1]animate()[/h1]\r\n\r\nMultiple properties can be animated at the same time by separating them with [b]commas[/b].\r\n[b]For example:[/b] [code format=\"js\" codeId=\"1140\"]$(\"div\").animate({\r\n  width: '250px',\r\n  height: '250px'\r\n}, 1000);[/code]\r\nIt is also possible to define [b]relative [/b]values (the value is then relative to the element's current value). This is done by putting += or -= in front of the value: [code format=\"js\" codeId=\"1141\"]$(\"div\").animate({\r\n  width: '+=250px',\r\n  height: '+=250px'\r\n}, 1000);[/code]\r\n[note]To stop an animation before it is finished, jQuery provides the [b]stop[/b]() method.[/note]"},{"id":6008,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":117323,"text":"True","isCorrect":true,"properties":{}},{"id":117324,"text":"False","isCorrect":false,"properties":{}}],"question":"By default, jQuery creates a queue for each animate() call.","textContent":"[h1]Animation Queue[/h1]\r\n\r\nBy default, jQuery comes with queue functionality for animations.\r\nThis means that if you write multiple animate() calls one after another, jQuery creates an \"internal\" queue for these method calls. Then it runs the animate calls [b]one-by-one[/b].\r\n[b]For example:[/b] [code format=\"js\" codeId=\"1142\"]var div = $(\"div\");\r\ndiv.animate({opacity: 1});\r\ndiv.animate({height: '+=100px', width: '+=100px', top: '+=100px'}, 500);\r\ndiv.animate({height: '-=100px', width: '-=100px', left: '+=100px'}, 500);\r\ndiv.animate({height: '+=100px', width: '+=100px', top: '-=100px'}, 500);\r\ndiv.animate({height: '-=100px', width: '-=100px', left: '-=100px'}, 500);\r\ndiv.animate({opacity: 0.5});[/code]\r\nEach [b]animate[/b]() method call will run one after another.\r\nRemember, to manipulate the position of elements, you need to set the CSS position property of the element to [b]relative[/b], [b]fixed[/b], or [b]absolute[/b].\r\n[note]The animate() method, just like the hide/show/fade/slide methods, can take an optional [b]callback [/b]function as its parameter, which is executed after the current effect is finished.[/note]"}]}}