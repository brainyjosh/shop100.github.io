{"lesson":{"id":1710,"name":"What is a Class","type":0,"mode":1,"videoID":null,"tags":"classes","quizzes":[{"id":3143,"number":1,"videoStart":0.0,"videoEnd":104.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":78097,"text":"A class has a name and describes attributes and behavior of an object","isCorrect":true,"properties":{}},{"id":78098,"text":"A class has no name","isCorrect":false,"properties":{}},{"id":78099,"text":"A class describes only the attributes of an object ","isCorrect":false,"properties":{}}],"question":"In regard to classes, which statement is true?","textContent":"[h1]What is a Class[/h1]\r\n\r\nObjects are created using [b]classes[/b], which are actually the focal point of OOP.\r\n\r\nThe class [b]describes [/b]what the object will be, but is separate from the object itself.\r\nIn other words, a class can be described as an object's [b]blueprint[/b], description, or definition.\r\nYou can use the same class as a blueprint for creating multiple different objects. For example, in preparation to creating a new building, the architect creates a blueprint, which is used as a basis for actually building the structure. That same blueprint can be used to create multiple buildings.\r\n\r\nProgramming works in the same fashion. We first define a class, which becomes the blueprint for creating objects.\r\n\r\nEach class has a [b]name[/b], and describes [b]attributes [/b]and [b]behavior[/b].\r\n\r\nIn programming, the term [b]type [/b]is used to refer to a class name: We're creating an object of a particular [b]type[/b].\r\n[note]Attributes are also referred to as [b]properties [/b]or [b]data[/b].[/note]"},{"id":3144,"number":2,"videoStart":105.5,"videoEnd":123.5,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":78100,"text":"A method is a function declared in a class","isCorrect":true,"properties":{}},{"id":78101,"text":"A method is the main function of the program","isCorrect":false,"properties":{}},{"id":78102,"text":"A method is an object","isCorrect":false,"properties":{}}],"question":"What is a method?","textContent":"[h1]Methods[/h1]\r\n\r\n[b]Method [/b]is another term for a class' behavior. A method is basically a [b]function [/b]that belongs to a class.\r\n\r\n[note]Methods are similar to functions - they are blocks of code that are called, and they can also perform actions and return values.[/note]"},{"id":3145,"number":3,"videoStart":124.0,"videoEnd":194.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":94990,"text":"instantiation","isCorrect":true,"properties":{}},{"id":94991,"text":"creation","isCorrect":false,"properties":{}},{"id":94992,"text":"objection","isCorrect":false,"properties":{}}],"question":"The process of creating objects is called...","textContent":"[h1]A Class Example[/h1]\r\n\r\nFor example, if we are creating a banking program, we can give our class the following characteristics:\r\n[b]name[/b]: BankAccount\r\n[b]attributes[/b]: accountNumber, balance, dateOpened\r\n[b]behavior:[/b] open(), close(), deposit()\r\n\r\nThe class specifies that each object should have the defined attributes and behavior. However, it doesn't specify what the actual data is; it only provides a [b]definition[/b].\r\n\r\nOnce we've written the class, we can move on to create objects that are based on that class.\r\nEach object is called an [b]instance[/b] of a class. The process of creating objects is called [b]instantiation[/b].\r\n[note]Each object has its own identity, data, and behavior.[/note]"}]}}