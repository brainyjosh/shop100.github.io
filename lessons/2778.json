{"lesson":{"id":2778,"name":"Operator Overloading","type":0,"mode":1,"videoID":null,"tags":"operator-overloading","quizzes":[{"id":5909,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":113377,"text":"class","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":113378,"text":"def","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":113379,"text":"new","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":113380,"text":"end","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to overload the multiplication operation for the Box class.\r\n[!raw!]\r\n{0} Box\r\n  attr_accessor :w, :h\r\n  def initialize(w, h)\r\n    self.w = w\r\n    self.h = h\r\n  end\r\n  {1} *(ob)\r\n    Box.{2}(self.w*ob.w, self.h*ob.h)\r\n  {3}\r\nend","textContent":"[h1]Operator Overloading[/h1]\r\n\r\nRuby allows us to overload operators so that we can perform operations such as adding two objects together.\r\nLet's say we have a class Shape, which has [b]width [/b]and [b]height [/b]properties. We want to be able to add together two Shape objects and, as a result, get a new object that has its [b]width [/b]and [b]height [/b]equal to the sum of the corresponding properties of the objects.\r\nAll we need to do is define the corresponding operator as a method:[code format=\"rb\" codeId=\"1076\"]class Shape\r\n  attr_accessor :h, :w\r\n  def initialize(h, w)\r\n    self.h = h\r\n    self.w = w\r\n  end\r\n\r\n  [b]def +(other)\r\n    Shape.new(self.h+other.h, self.w+other.w)\r\n  end[/b]\r\n\r\nend\r\n\r\na = Shape.new(7, 4)\r\nb = Shape.new(9, 18)\r\nc = a+b\r\nputs c.h # outputs 16\r\nputs c.w # outputs 22[/code]\r\nAs you can see, the + method takes one argument, which is another Shape object,  and returns a new Shape object with the corresponding values.\r\n[note]You can override almost all operators in Ruby and have any custom logic defined in the corresponding method.[/note]"}]}}