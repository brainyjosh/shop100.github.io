{"lesson":{"id":2343,"name":"Strings","type":0,"mode":1,"videoID":null,"tags":"strings","quizzes":[{"id":4760,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96569,"text":"var","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":96570,"text":"sample","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to declare a variable named sample, with \"I love Swift!\" as its initial value.\r\n[!raw!]\r\n{0} {1} = \"I love Swift!\"","textContent":"[h1]Strings[/h1]\r\n\r\nA [b]string [/b]is an ordered collection of characters, such as \"Hello, World\" or \"SoloLearn\". Swift strings are represented by the [b]String [/b]type, which in turn represents a collection of [b]Character [/b]type values.\r\n\r\nPredefined [b]String [/b]values can be included within code as string literals, or fixed sequences of textual characters within double quotation marks (\"\"). Use a string literal as an initial value for a constant or variable.[code format=\"swift\"]let someString = \"Some string literal value\"[/code]\r\n[note]Because it is initialized with a string literal value, Swift infers a type of [b]String [/b]for the [i]someString [/i]constant. [/note]"},{"id":4761,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96571,"text":"if","isCorrect":true,"properties":{}},{"id":96572,"text":"someString","isCorrect":true,"properties":{}},{"id":96573,"text":"isEmpty","isCorrect":true,"properties":{}}],"question":"Fill in the blanks to print 0 to the screen if the String is empty.\r\n[!raw!]\r\nlet someString = \"\"\r\n{0} {1}.{2} {\r\n   print(\"0\")\r\n} else {\r\n   print(someString)\r\n}\r\n","textContent":"[h1]Empty Strings[/h1]\r\n\r\nAn empty [b]String [/b]value can be created as the starting point for a longer string. To do this, either assign an empty string literal to a variable or initialize a new [b]String [/b]instance using initializer syntax:[code format=\"swift\"]var emptyString = \"\" // empty string literal\r\nvar anotherEmptyString = String() // initializer syntax[/code]\r\n[note]Both strings are empty and equivalent to each other.[/note]\r\nDetermine whether a String value is empty by checking its Boolean [b]isEmpty [/b]property:[code format=\"swift\"]if emptyString.[b]isEmpty [/b]{\r\n   print(\"String is empty\")\r\n}[/code]"}]}}