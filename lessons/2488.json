{"lesson":{"id":2488,"name":"__main__","type":0,"mode":1,"videoID":null,"tags":"modules","quizzes":[{"id":5199,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104618,"text":"x","isCorrect":false,"properties":{}},{"id":104619,"text":"y","isCorrect":false,"properties":{}},{"id":104620,"text":"z","isCorrect":true,"properties":{}}],"question":"Which variable couldn't be accessed if this code was imported as a module?\r\nx = 1\r\ny = x\r\nif __name__==\"__main__\":\r\n    z = 3","textContent":"[h1]__main__[/h1]\r\n\r\nMost Python code is either a module to be imported, or a script that does something. \r\nHowever, sometimes it is useful to make a file that can be both imported as a module and run as a script. \r\nTo do this, place script code inside [b]if __name__ == \"__main__\"[/b]. \r\nThis ensures that it won't be run if the file is imported.\r\n[b]Example:[/b][code format=\"py\" codeId=\"452\"]def function():\r\n   print(\"This is a module function\")\r\n\r\n[b]if __name__==\"__main__\":[/b]\r\n   print(\"This is a script\")[/code]\r\n[b]Result:[/b][code format=\"raw\" ]>>>\r\nThis is a script\r\n>>>[/code]\r\n[note]When the Python interpreter reads a source file, it executes all of the code it finds in the file. Before executing the code, it defines a few special variables. \r\nFor example, if the Python interpreter is running that module (the source file) as the main program, it sets the special [b]__name__[/b] variable to have a value [b]\"__main__\"[/b]. If this file is being imported from another module, [b]__name__[/b] will be set to the module's name.[/note]"},{"id":5200,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":8,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104621,"text":"if __name__== \"__main__\":","isCorrect":false,"properties":{}},{"id":104622,"text":"   print(\"Hi\")","isCorrect":false,"properties":{}},{"id":104623,"text":"else:","isCorrect":false,"properties":{}},{"id":104624,"text":"   print(\"Welcome\")","isCorrect":false,"properties":{}}],"question":"Rearrange the code to print \"Welcome\" if the script is imported, and \"Hi\" if it is not imported.","textContent":"[h1]__main__[/h1]\r\n\r\nIf we save the code from our previous example as a file called [b]sololearn.py[/b], we can then import it to another script as a module, using the name [b]sololearn[/b].\r\n[b]sololearn.py[/b] [code format=\"py\" codeId=\"453\"]def function():\r\n   print(\"This is a module function\")\r\n\r\nif __name__==\"__main__\":\r\n   print(\"This is a script\") [/code]\r\n[b]some_script.py[/b] [code format=\"py\" ][b]import sololearn[/b]\r\n\r\nsololearn.function()[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nThis is a module function\r\n>>>[/code]\r\n[note]Basically, we've created a custom module called [b]sololearn[/b], and then used it in another script.[/note]"}]}}