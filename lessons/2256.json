{"lesson":{"id":2256,"name":"3D Transforms","type":0,"mode":1,"videoID":null,"tags":"css3 transform","quizzes":[{"id":4517,"number":1,"videoStart":146.0,"videoEnd":235.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":101728,"text":"rotateZ","isCorrect":true,"properties":{}},{"id":101729,"text":"rotateA","isCorrect":false,"properties":{}},{"id":101730,"text":"rotateX","isCorrect":false,"properties":{}}],"question":"Add a rotate function that rotates the element 45 degrees around the Z axis.\r\n[!raw!]\r\ntransform: {0}(45deg);","textContent":"[h1]3D Transforms[/h1]\r\n\r\nAlong with the x and y axes, 3D Transforms introduce the [b]Z-axis[/b], which enables 3D manipulations.\r\n3D Transforms are quite similar to 2D Transforms:\r\nrotateX(), rotateY() and rotateZ() rotate an element in 3D space around the corresponding axis at a given degree.\r\n\r\n[b]The CSS:[/b][code format=\"css\" codeId=\"638\"]div.X {\r\n   transform: [b]rotateX(150deg)[/b];\r\n}\r\ndiv.Y {\r\n   transform: [b]rotateY(150deg)[/b];\r\n}\r\ndiv.Z {\r\n   transform: [b]rotateZ(150deg)[/b];\r\n}[/code]\r\n[b]Result:[/b] [img id=\"2716\" width=\"100%\"]\r\n[note]You can switch off all transformations applied to an element using the none function: [b]transform: none;[/b][/note]"},{"id":4518,"number":2,"videoStart":111.0,"videoEnd":136.5,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":101731,"text":"-100","isCorrect":false,"properties":{"prefix":"transform: translateZ(","postfix":"px);"}}],"question":"Fill in the missing value to \"push\" the elements 100 pixels back.","textContent":"[h1]Translations[/h1]\r\n\r\n3D translate methods allow you to move the element [b]horizontally [/b](translateX), [b]vertically [/b](translateY) and [b]into or out of the screen[/b] (translateZ), using any CSS length units (px, em, %, etc.). Positive values moves the element toward the viewer, negative values away.\r\n\r\n[b]The CSS:[/b][code format=\"css\" codeId=\"639\"]#mybox1 {\r\n   transform: translateX(29px) \r\n     translateY(5em) \r\n     translateZ(-13px);\r\n}[/code]\r\n[b]Result[/b] (Before translation): [img id=\"2722\" width=\"100%\"]\r\n[b]Result[/b] (After translation): [img id=\"2718\" width=\"100%\"]\r\nThe[b] translate3d()[/b] method allows us to pass the x, y, and z offsets, all at once and in the following order: [code format=\"css\" codeId=\"640\"]#mybox1 {\r\n   transform: translate3d(-20px, 4em, 10px);\r\n}[/code]\r\nLike the translate3d() method, there are also [b]scale3d() [/b]and [b]rotate3d()[/b], which are applicable for scaling and rotating elements in 3D.\r\n[note]Translation of an element is similar to relative positioning - it doesn't affect the document's flow. The translated element will keep its position in the flow and will only appear to have moved.[/note]"},{"id":4519,"number":3,"videoStart":28.0,"videoEnd":111.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":101773,"text":"Bigger","isCorrect":false,"properties":{}},{"id":101774,"text":"Smaller","isCorrect":true,"properties":{}}],"question":"The higher the perspective value, the ... the edges of the rotating box. ","textContent":"[h1]Perspective[/h1]\r\n\r\nPerspective defines how the depth of the 3D scene is rendered. Think of perspective as a distance from the viewer to the object. The greater the value, the further the distance, so the less intense the visual effect. \r\nWhen defining the perspective property for an element, it is the [b][i]child [/i][/b]elements that get the perspective view, [b][i]not [/i][/b]the element itself.\r\n\r\n[b]The CSS:[/b][code format=\"css\" codeId=\"641\"]div.empty-div {\r\n[b]   perspective: 100px;[/b]\r\n}\r\ndiv.green-div {\r\n[b]   transform: rotateX(45deg);[/b]\r\n}[/code]\r\n[b]Result:[/b] [img id=\"2723\" width=\"100%\"]\r\n[note]The perspective property only affects 3D transformed elements.[/note]"}]}}