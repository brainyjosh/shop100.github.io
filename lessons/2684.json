{"lesson":{"id":2684,"name":"Nested Classes","type":0,"mode":1,"videoID":null,"tags":"classes","quizzes":[{"id":5573,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":8,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104111,"text":"class Person {","isCorrect":false,"properties":{}},{"id":104112,"text":"  class Hand {","isCorrect":false,"properties":{}},{"id":104113,"text":"    public void Shake() {","isCorrect":false,"properties":{}},{"id":104114,"text":"     Console.WriteLine(\"Hi\");  }","isCorrect":false,"properties":{}},{"id":104115,"text":"}   }","isCorrect":false,"properties":{}}],"question":"Rearrange the code to have a nested class Hand, which has a method called \"Shake\" that prints \"Hi\".","textContent":"[h1]Nested Classes[/h1]\r\n\r\nC# supports [b]nested[/b] classes: a class that is a member of another class.\r\n[b]For example: [/b][code format=\"cs\" ]class Car {\r\n  string name;\r\n  public Car(string nm) {\r\n    name = nm;\r\n    Motor m = new Motor();\r\n  }\r\n  public class Motor {\r\n    // some code\r\n  }\r\n}[/code]\r\nThe [b]Motor [/b]class is nested in the [b]Car [/b]class and can be used similar to other members of the class.\r\nA nested class acts as a member of the class, so it can have the same access modifiers as other members (public, private, protected).\r\n[note]Just as in real life, objects can contain other objects. For example, a car, which has its own attributes (color, brand, etc.) contains a motor, which as a separate object, has its own attributes (volume, horsepower, etc.). Here, the Car class can have a nested Motor class as one of its members.[/note]"}]}}