{"lesson":{"id":2428,"name":"Variables","type":0,"mode":1,"videoID":null,"tags":"variables","quizzes":[{"id":4957,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97945,"text":"spamspamspam","isCorrect":false,"properties":{}},{"id":97946,"text":"\"spamspamspam\"","isCorrect":false,"properties":{}},{"id":97947,"text":"eggseggseggs","isCorrect":true,"properties":{}}],"question":"What is the output of this code?\r\n>>> spam = \"eggs\"\r\n>>> print(spam * 3)","textContent":"[h1]Variables[/h1]\r\n\r\n[b]Variables [/b]play a very important role in most programming languages, and Python is no exception. A variable allows you to store a value by assigning it to a name, which can be used to refer to the value later in the program. \r\n\r\nTo assign a variable, use [b]one equals sign[/b]. Unlike most lines of code we've looked at so far, it doesn't produce any output at the Python console.[code format=\"py\" codeId=\"288\"]>>> x = 7\r\n>>> print(x)\r\n7\r\n>>> print(x + 3)\r\n10\r\n>>> print(x)\r\n7[/code]\r\n[note]You can use variables to perform corresponding operations, just as you did with numbers and strings. As you can see, the variable stores its value throughout the program.[/note]"},{"id":4958,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106614,"text":"\"7\"","isCorrect":false,"properties":{}},{"id":106615,"text":"7","isCorrect":true,"properties":{}},{"id":106616,"text":"= 7","isCorrect":false,"properties":{}}],"question":"Drag the correct answer to make the code work correctly.\r\n[!raw!]\r\n>>> x = 5\r\n>>> y = {0}\r\n>>> print(x + y)\r\n12","textContent":"[h1]Variables[/h1]\r\n\r\nVariables can be reassigned as many times as you want, in order to change their value. \r\nIn Python, variables don't have specific types, so you can assign a string to a variable, and later assign an integer to the same variable. [code format=\"py\" codeId=\"289\"]>>> x = 123.456\r\n>>> print(x)\r\n123.456\r\n>>> x = \"This is a string\"\r\n>>> print(x + \"!\")\r\nThis is a string![/code]"},{"id":4959,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104412,"text":"a variable name","isCorrect":false,"properties":{}},{"id":104413,"text":"A_VARIABLE_NAME","isCorrect":true,"properties":{}},{"id":104414,"text":"a-variable-name","isCorrect":false,"properties":{}}],"question":"Which of these is a valid variable name in Python?","textContent":"[h1]Variable Names[/h1]\r\n\r\nCertain restrictions apply in regard to the characters that may be used in Python variable names. The only characters that are allowed are letters, numbers, and underscores. Also, they can't start with numbers.\r\nNot following these rules results in errors. [code format=\"py\" codeId=\"290\"]>>> this_is_a_normal_name = 7\r\n\r\n>>> 123abc = 7\r\nSyntaxError: invalid syntax\r\n\r\n>>> spaces are not allowed\r\nSyntaxError: invalid syntax[/code]\r\n[note]Python is a case sensitive programming language. Thus, [b]Lastname [/b]and [b]lastname [/b]are two different variable names in Python.[/note]"},{"id":4960,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104764,"text":"20","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\n>>> spam = 2\r\n>>> eggs = 3\r\n>>> del spam\r\n>>> eggs = 4\r\n>>> spam = 5\r\n>>> print(spam * eggs)","textContent":"[h1]Variables [/h1]\r\n\r\nTrying to reference a variable you haven't assigned to causes an [b]error[/b]. \r\nYou can use the [b]del[/b] statement to remove a variable, which means the reference from the name to the value is deleted, and trying to use the variable causes an error. Deleted variables can be reassigned to later as normal. [code format=\"py\" ]>>> foo = \"a string\"\r\n>>> foo\r\n'a string'\r\n>>> bar\r\nNameError: name 'bar' is not defined\r\n>>> [b]del [/b]foo\r\n>>> foo\r\nNameError: name 'foo' is not defined[/code]\r\nYou can also take the value of the variable from the user input.[code format=\"py\" codeId=\"949\"]>>> foo = input(\"Enter a number: \")\r\nEnter a number: 7\r\n>>> print(foo)\r\n7[/code]\r\n[note]The variables [b]foo [/b]and [b]bar [/b]are called [b]metasyntactic [/b]variables, meaning that they are used as placeholder names in example code to demonstrate something.[/note]"}]}}