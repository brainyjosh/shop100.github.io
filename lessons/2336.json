{"lesson":{"id":2336,"name":"Type Annotations","type":0,"mode":1,"videoID":null,"tags":"variables","quizzes":[{"id":4735,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96515,"text":"var","isCorrect":true,"properties":{}},{"id":96516,"text":"String","isCorrect":true,"properties":{}},{"id":96517,"text":"Double","isCorrect":false,"properties":{}},{"id":96518,"text":"text","isCorrect":false,"properties":{}},{"id":96519,"text":"let","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to declare a variable with the corresponding type annotation.\r\n[!raw!]\r\n{0} test: {1}\r\ntest = \"Welcome\"","textContent":"[h1]Type Annotations[/h1]\r\n\r\n[b]Type annotations[/b] ensure that your code is clear about the value stored within your constant or variable. Swift's basic types include:\r\n[b]Int[/b]: Integers\r\n[b]Double [/b]and [b]Float[/b]: Floating-Point Values\r\n[b]Bool[/b]: Boolean Values\r\n[b]String[/b]: Textual Data.\r\n\r\nAdd a type annotation by placing a colon (:) after the constant or variable name, then add a space, and then add the type name, as follows:[code format=\"swift\"]var welcomeMsg: [b]String[/b]\r\nwelcomeMsg = \"Hello\"[/code]\r\nThis example provides a type annotation for a variable called \"welcomeMsg\", that indicates that the variable can store [b]String [/b]values.\r\n[note]It's possible to define multiple related variables of the same type. Include them all on a single line, separated by commas, then add a single type annotation after the final variable name: \r\n[b]var red, green, blue: Double[/b][/note]"},{"id":4736,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96520,"text":"Int","isCorrect":true,"properties":{}},{"id":96521,"text":"Double","isCorrect":true,"properties":{}},{"id":96522,"text":"Float","isCorrect":false,"properties":{}},{"id":96523,"text":"String","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to indicate types for the constants.\r\n[!raw!]\r\nlet meaningOfLife = 42 // {0}\r\nlet pi = 3.14159 // {1}","textContent":"[h1]Type Annotations[/h1] \r\n\r\nIn practice, you will rarely need to add type annotations. Providing an initial value for a constant or a variable at the point at which it is defined, will almost always be sufficient for Swift to infer which type should be used:[code format=\"swift\"]let pi = 3.14159 //Double[/code]\r\n[note]Swift always chooses Double (as opposed to Float) when inferring the type for floating-point numbers.\r\nSwift is a [b]type safe[/b] language, meaning that it supports clarity when specifying value types for code. When part of your code expects a String, you can't pass it an Int by mistake.[/note]"}]}}