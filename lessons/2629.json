{"lesson":{"id":2629,"name":"Jagged Arrays","type":0,"mode":1,"videoID":null,"tags":"arrays","quizzes":[{"id":5514,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":103677,"text":"8","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":103678,"text":",","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to declare a jagged array that contains 8 two-dimensional arrays.\r\n[!raw!]\r\nint[ ][,] a = new int[{0}][{1}];","textContent":"[h1]Jagged Arrays[/h1]\r\n\r\nA [b]jagged [/b]array is an array whose elements are arrays. So it is basically an [b]array of arrays[/b].\r\nThe following is a declaration of a single-dimensional array that has three elements, each of which is a single-dimensional array of integers: [code format=\"cs\" ]int[ ][ ] jaggedArr = new int[3][ ];[/code]\r\nEach dimension is an array, so you can also initialize the array upon declaration like this: [code format=\"cs\" ]int[ ][ ] jaggedArr = new int[ ][ ] \r\n{\r\n  new int[ ] {1,8,2,7,9},\r\n  new int[ ] {2,4,6},\r\n  new int[ ] {33,42}\r\n};[/code]\r\nYou can access individual array elements as shown in the example below: [code format=\"cs\" codeId=\"878\"]int x = jaggedArr[2][1]; //42[/code]\r\nThis accesses the second element of the third array.\r\n[note]A [b]jagged array [/b]is an array-of-arrays, so an int[ ][ ] is an array of int[ ], each of which can be of different lengths and occupy their own block in memory. \r\nA[b] multidimensional array [/b](int[,]) is a single block of memory (essentially a matrix). It always has the same amount of columns for every row.[/note]"}]}}