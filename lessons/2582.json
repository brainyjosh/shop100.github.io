{"lesson":{"id":2582,"name":"Variables","type":0,"mode":1,"videoID":null,"tags":"variables","quizzes":[{"id":5361,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106190,"text":"#PersonName#","isCorrect":false,"properties":{}},{"id":106191,"text":"Bad_Var","isCorrect":true,"properties":{}},{"id":106192,"text":"PersonAge","isCorrect":true,"properties":{}},{"id":106193,"text":"1Star","isCorrect":false,"properties":{}}],"question":"Which are valid C# variable names?","textContent":"[h1]Variables[/h1]\r\n\r\nPrograms typically use data to perform tasks. \r\nCreating a [b]variable [/b]reserves a memory location, or a space in memory, for storing values. It is called [b]variable[/b] because the information stored in that location can be changed when the program is running. \r\nTo use a variable, it must first be declared by specifying the [b]name [/b]and [b]data type[/b]. \r\nA variable name, also called an [b]identifier[/b], can contain letters, numbers and the underscore character (_) and must start with a letter or underscore. \r\nAlthough the name of a variable can be any set of letters and numbers, the best identifier is [b]descriptive [/b]of the data it will contain. This is very important in order to create clear, understandable and readable code!\r\n[note]For example, [b]firstName [/b]and [b]lastName [/b]are good descriptive variable names, while [b]abc [/b]and [b]xyz [/b]are not.[/note]"},{"id":5362,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102567,"text":"int","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":102568,"text":"=","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to declare a variable named num of type integer and assign 42 to it.\r\n[!raw!]\r\n{0} num;\r\nnum {1} 42;","textContent":"[h1]Variable Types[/h1]\r\n\r\nA [b]data type [/b]defines the information that can be stored in a variable, the size of needed memory and the operations that can be performed with the variable. \r\nFor example, to store an integer value (a whole number) in a variable, use the [b]int [/b]keyword: [code format=\"cs\" ][b]int [/b]myAge;[/code]\r\nThe code above declares a variable named [b]myAge [/b]of type [b]integer[/b].\r\n[note]A line of code that completes an action is called a statement. Each statement in C# must end with a [b]semicolon[/b].[/note]\r\nYou can assign the value of a variable when you declare it: [code format=\"cs\" ]int myAge = 18;[/code]\r\nor later in your code: [code format=\"cs\" ]int myAge;\r\nmyAge = 18;[/code]\r\n[note]Remember that you need to declare the variable before using it.[/note]"},{"id":5363,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102561,"text":"bool","isCorrect":true,"properties":{}},{"id":102562,"text":"double","isCorrect":true,"properties":{}},{"id":102563,"text":"string","isCorrect":true,"properties":{}},{"id":102564,"text":"int","isCorrect":true,"properties":{}}],"question":"Fill in the blanks with the correct data types.\r\n[!raw!]\r\n{0} a = false;\r\n{1} b = 4.22;\r\n{2} c = \"Hi\";\r\n{3} d = 11;","textContent":"[h1]Built-in Data Types[/h1]\r\n\r\nThere are a number of built-in data types in C#. The most common are:\r\n[b]int[/b] - integer.\r\n[b]float[/b] - floating point number.\r\n[b]double[/b] - double-precision version of float.\r\n[b]char [/b]- a single character.\r\n[b]bool [/b]- Boolean that can have only one of two values: True or False.\r\n[b]string [/b]- a sequence of characters.\r\nThe statements below use C# data types:[code format=\"cs\" ][b]int[/b] x = 42;\r\n[b]double[/b] pi = 3.14;\r\n[b]char [/b]y = 'Z';\r\n[b]bool[/b] isOnline = true;\r\n[b]string[/b] firstName = \"David\";[/code]\r\n[note]Note that [b]char[/b] values are assigned using single quotes and [b]string[/b] values require double quotes.\r\nYou will learn how to perform different operations with variables in the upcoming lessons![/note]"}]}}