{"lesson":{"id":2810,"name":"The Event Object","type":0,"mode":1,"videoID":null,"tags":null,"quizzes":[{"id":6000,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":117264,"text":"keydown","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":117265,"text":"event","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":117266,"text":"which","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to handle the keydown event on the input field and alert which key was pressed.\r\n[!raw!]\r\n$( \"input\" ).{0}(function(event) {\r\n  alert({1}.{2});\r\n    });\r\n","textContent":"[h1]The Event Object[/h1]\r\n\r\nEvery event handling function can receive an [b]event object[/b], which contains properties and methods related to the event:\r\n[b]pageX[/b], [b]pageY [/b]the mouse position (X & Y coordinates) at the time the event occurred, relative to the top left of the page.\r\n[b]type [/b]the type of the event (e.g. \"click\").\r\n[b]which [/b]the button or key that was pressed.\r\n[b]data [/b]any data that was passed in when the event was bound.\r\n[b]target [/b]the DOM element that initiated the event.\r\n[b]preventDefault[/b]() prevent the default action of the event (e.g., following a link).\r\n[b]stopPropagation[/b]() Stop the event from bubbling up to other elements.\r\n[note]You can check out our JavaScript course for more information on event properties.[/note]\r\nFor example, letâ€™s handle the click event on an <a> element and prevent it from following the link provided in the href attribute:\r\n[b]HTML[/b]: [code format=\"html\" ]<a href=\"https://www.sololearn.com\">Click me</a>[/code]\r\n[b]JS:[/b] [code format=\"js\" codeId=\"1131\"]$( \"a\" ).click(function([b]event[/b]) {\r\n  alert([b]event[/b].pageX);\r\n  [b]event[/b].preventDefault();\r\n});[/code]\r\nThe code above alerts the mouse position at the time of the click and prevents following the link.\r\n[note]As you can see, the event object is passed to the event handler function as an argument.[/note]"},{"id":6001,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":117271,"text":"trigger","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":117272,"text":"submit","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to trigger the submit event on the selected element.\r\n[!raw!]\r\n$(\"form\").{0}(\"{1}\");","textContent":"[h1]Trigger Events[/h1]\r\n\r\nWe can also trigger events programmatically using the [b]trigger[/b]() method. For example, you can trigger a click event without the user actually clicking on an element: [code format=\"js\" codeId=\"1132\"]$(\"div\").click(function() {\r\n   alert(\"Clicked!\");\r\n});\r\n$(\"div\").[b]trigger[/b](\"click\");[/code]\r\nThis code triggers the click event for the selected element.\r\n[note]The [b]trigger[/b]() method cannot be used to mimic native browser events, such as clicking on a file input box or an anchor tag. Only events in the jQuery event system can be handled.[/note]"}]}}