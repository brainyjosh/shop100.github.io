{"lesson":{"id":1895,"name":"Const Objects","type":0,"mode":1,"videoID":"k55CRqm1gzk","tags":"constants","quizzes":[{"id":3717,"number":1,"videoStart":3.0,"videoEnd":75.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95065,"text":"const","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":95066,"text":"var","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Type in the missing keyword to declare a constant variable named ''var'' of type double.\r\n[!raw!]\r\n{0} double {1} = 3.4;","textContent":"[h1]Constants[/h1]\r\n\r\n[b][/b]A [b]constant [/b]is an expression with a fixed value. It cannot be changed while the program is running.\r\nUse the [b]const [/b]keyword to define a constant variable. [code format=\"cpp\"][b]const [/b]int x = 42;[/code]\r\n[note]All constant variables [b]must [/b]be initialized at the time of their creation.[/note]"},{"id":3718,"number":2,"videoStart":76.0,"videoEnd":188.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95067,"text":"Student","isCorrect":true,"properties":{}},{"id":95068,"text":"printAge()","isCorrect":true,"properties":{}},{"id":95069,"text":"st","isCorrect":false,"properties":{}},{"id":95070,"text":"class","isCorrect":false,"properties":{}},{"id":95071,"text":"~Student","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to declare an object named ''st'' of type Student, then call its printAge() function.\r\n[!raw!]\r\n{0} st;\r\nst.{1};","textContent":"[h1]Constant Objects[/h1]\r\n\r\nAs with the built-in data types, we can make class objects constant by using the [b]const [/b]keyword.[code format=\"cpp\"][b]const [/b]MyClass obj;[/code]\r\nAll const variables must be initialized when they're created. In the case of classes, this initialization is done via constructors. If a class is not initialized using a parameterized constructor, a public default constructor must be provided - if no public default constructor is provided, a compiler error will occur.\r\n\r\nOnce a const class object has been initialized via the constructor, you cannot modify the object's member variables. This includes both directly making changes to public member variables and calling member functions that set the value of member variables.\r\n[note]When you've used [b]const [/b]to declare an object, you can't change its data members during the object's lifetime.[/note]"},{"id":3719,"number":3,"videoStart":191.0,"videoEnd":321.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97823,"text":"class","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":97824,"text":"const","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Type in the missing keywords to declare a constant printAge() member function for the Student class.\r\n[!raw!]\r\n{0} Student {\r\npublic:\r\nvoid printAge() {1};\r\n};","textContent":"[h1]Constant Objects[/h1]\r\n\r\nOnly non-const objects can call non-const functions.\r\nA constant object can't call regular functions. Hence, for a constant object to work you need a constant function. \r\n\r\nTo specify a function as a [b]const [/b]member, the [b]const [/b]keyword must follow the function prototype, outside of its parameters' closing parenthesis. For [b]const [/b]member functions that are defined outside of the class definition, the [b]const [/b]keyword must be used on both the function prototype and definition. For example:\r\n[b]MyClass.h [/b] [code format=\"cpp\" ]class MyClass\r\n{\r\n  public:\r\n    void myPrint() [b]const[/b];\r\n};[/code]\r\n[b]MyClass.cpp[/b] [code format=\"cpp\" ]#include \"MyClass.h\"\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nvoid MyClass::myPrint() [b]const [/b]{\r\n  cout <<\"Hello\"<<endl;\r\n}[/code]\r\nNow the [b]myPrint()[/b] function is a constant member function. As such, it can be called by our constant object: [code format=\"cpp\" codeId=\"261\"]int main() {\r\n  [b]const [/b]MyClass obj;\r\n  obj.myPrint();\r\n}\r\n// Outputs \"Hello\"[/code]"},{"id":3720,"number":4,"videoStart":322.0,"videoEnd":375.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":80255,"text":"...cannot modify any non-const members","isCorrect":true,"properties":{}},{"id":80256,"text":"...can modify non-const data members","isCorrect":false,"properties":{}},{"id":80257,"text":"...cannot ever be called","isCorrect":false,"properties":{}}],"question":"Constant member functions...","textContent":"[h1]Constant Objects[/h1]\r\n\r\nAttempting to call a regular function from a constant object results in an error.\r\nIn addition, a compiler error is generated when any [b]const [/b]member function attempts to change a member variable or to call a non-const member function.\r\n[note]Defining constant objects and functions ensures that corresponding data members cannot be unexpectedly modified.[/note]"}]}}