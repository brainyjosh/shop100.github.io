{"lesson":{"id":2713,"name":"Logical Operators","type":0,"mode":1,"videoID":null,"tags":"operators","quizzes":[{"id":5666,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":113714,"text":"if","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":113715,"text":"&&","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to output \"Yes\" if num is in the range of 5 to 10.\r\n[!raw!]\r\nnum = 8\r\n{0} num >=5 {1} num <=10\r\n  puts \"Yes\"\r\nend","textContent":"[h1]Logical Operators[/h1]\r\n\r\nLogical operators are used to form more complex criteria that test more than one condition for an [b]if[/b] expression. \r\nRuby has three logical operators: [b]and (&&)[/b], [b]or (||)[/b], and [b]not (!)[/b]. \r\nA conditional using [b]and [/b] evaluates as [b]true [/b]if, and only if, both of its operands are true. Otherwise, the entire conditional evaluates to [b]false[/b].\r\n[b]For example:[/b] [code format=\"rb\" codeId=\"995\"]a = 42\r\nb = 8\r\nif a > 7 [b]&&[/b] b < 11\r\n  puts \"Yes\"\r\nend\r\n\r\n# outputs \"Yes\"[/code]\r\n[note]Ruby can use words instead of the logical operator symbols ([b]and[/b], [b]or[/b], [b]not[/b]), but those have lower precedence and are generally avoided.[/note]"},{"id":5668,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":112916,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\na = 5\r\nif a > 6 || a < 8\r\n  puts a/2\r\nelse\r\n  puts a\r\nend","textContent":"[h1]OR[/h1]\r\n\r\nThe [b]or [/b](||) operator evaluates to true if either (or both) of its operands are true, and false if both operands are false.\r\n[b]For example:[/b] [code format=\"rb\" codeId=\"996\"]a = 3\r\nb = 5\r\nif a ==3 [b]||[/b] b > 10\r\n  puts \"Welcome\"\r\nend\r\n\r\n# outputs \"Welcome\"[/code]"},{"id":5669,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":112918,"text":"3","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\na = 5\r\nif !(a > 2)\r\n  print(\"2\")\r\nelsif !(1 + 2 == a)\r\n  print(\"3\")\r\nelse\r\n  print(\"4\")\r\nend","textContent":"[h1]NOT[/h1]\r\n\r\nThe [b]not [/b](!) operator reverses the state of a single operand. \r\nThe result of not true is false, and not false is true.[code format=\"rb\" codeId=\"997\"]a = 7\r\nputs [b]![/b](a>5)\r\n\r\n# outputs [b]false[/b][/code]\r\nIn this code, a>5 evaluates to [b]true [/b]and then the [b]not [/b]operator reverses it to [b]false[/b].\r\n[note]You can chain together multiple conditions with the logical operators to check for multiple conditions. Parentheses can be used to group together separate conditions for clarity and to control the order of operations. For example:\r\n(a>b && b < 100) || (a<b && b > 100)[/note]"}]}}