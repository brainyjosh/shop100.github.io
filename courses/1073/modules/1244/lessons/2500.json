{"lesson":{"id":2500,"name":"Ternary Operator","type":0,"mode":1,"videoID":null,"tags":null,"quizzes":[{"id":5195,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104611,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the value of b?\r\nb = 1 if 2+2 == 5 else 2","textContent":"[h1]Ternary Operator[/h1]\r\n\r\nConditional expressions provide the functionality of if statements while using less code. They shouldn't be overused, as they can easily reduce readability, but they are often useful when assigning variables. \r\nConditional expressions are also known as applications of the [b]ternary operator[/b].\r\n[b]Example:[/b] [code format=\"py\" codeId=\"448\"]a = 7\r\n[b]b = 1 if a >= 5 else 42[/b]\r\nprint(b)[/code]\r\n[b]Result:[/b][code format=\"raw\" ]>>>\r\n1\r\n>>>[/code]\r\nThe ternary operator checks the condition and returns the corresponding value.\r\nIn the example above, as the condition is true, [b]b[/b] is assigned 1. If [b]a[/b] was less than 5, it would have been assigned 42.\r\n[b]Another example:[/b] [code format=\"py\" codeId=\"449\"]status  = 1\r\n[b]msg = \"Logout\" if status == 1 else \"Login\"[/b][/code]\r\n[note]The [b]ternary [/b]operator is so called because, unlike most operators, it takes [b]three [/b]arguments.[/note]"}]}}