{"lesson":{"id":2455,"name":"String Formatting","type":0,"mode":1,"videoID":null,"tags":"strings","quizzes":[{"id":5083,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104444,"text":"abracadabra","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the result of this code?\r\nprint(\"{0}{1}{0}\".format(\"abra\", \"cad\"))","textContent":"[h1]String Formatting[/h1]\r\n\r\nSo far, to combine strings and non-strings, you've converted the non-strings to strings and added them.  \r\nString formatting provides a more powerful way to embed non-strings within strings. String formatting uses a string's [b]format [/b]method to substitute a number of arguments in the string.\r\n[b]Example:[/b][code format=\"py\" codeId=\"375\"]# string formatting\r\nnums = [4, 5, 6]\r\nmsg = \"Numbers: {0} {1} {2}\". [b]format[/b](nums[0], nums[1], nums[2])\r\nprint(msg)[/code]\r\n[b]Result:[/b][code format=\"raw\" ]>>>\r\nNumbers: 4 5 6\r\n>>>[/code]\r\n[note]Each argument of the format function is placed in the string at the corresponding position, which is determined using the curly braces { }.[/note]"},{"id":5084,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98173,"text":"7, 9, 5","isCorrect":true,"properties":{}},{"id":98174,"text":"5, 9, 7","isCorrect":false,"properties":{}},{"id":98175,"text":"9, 7, 5","isCorrect":false,"properties":{}}],"question":"What is the result of this code?\r\nstr=\"{c}, {b}, {a}\".format(a=5, b=9, c=7)\r\nprint(str)","textContent":"[h1]String Formatting[/h1]\r\n\r\nString formatting can also be done with named arguments.\r\n[b]Example:[/b][code format=\"py\" codeId=\"376\"]a = \"{x}, {y}\".[b]format[/b](x=5, y=12)\r\nprint(a)[/code]\r\n[b]Result:[/b][code format=\"raw\" ]>>>\r\n5, 12\r\n>>>[/code]"}]}}