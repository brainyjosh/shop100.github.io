{"lesson":{"id":2453,"name":"List Slices","type":0,"mode":1,"videoID":null,"tags":"lists","quizzes":[{"id":5076,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98152,"text":"[16, 25, 36, 49]","isCorrect":false,"properties":{}},{"id":98153,"text":"[16, 25, 36]","isCorrect":true,"properties":{}},{"id":98154,"text":"[25, 36, 49]","isCorrect":false,"properties":{}}],"question":"What is the result of this code?\r\nsqs = [0, 1, 4, 9, 16, 25, 36, 49, 64]\r\nprint(sqs[4:7])","textContent":"[h1]List Slices[/h1]\r\n\r\n[b]List slices[/b] provide a more advanced way of retrieving values from a list. Basic list slicing involves indexing a list with [b]two colon-separated integers[/b]. This returns a new list containing all the values in the old list between the indices.\r\n[b]Example:[/b] [code format=\"py\" codeId=\"368\"]squares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\r\nprint(squares[[b]2:6[/b]])\r\nprint(squares[[b]3:8[/b]])\r\nprint(squares[[b]0:1[/b]])[/code]\r\n[b]Result: [/b][code format=\"raw\" ]>>>\r\n[4, 9, 16, 25]\r\n[9, 16, 25, 36, 49]\r\n[0]\r\n>>>[/code]\r\n[note]Like the arguments to [b]range[/b], the first index provided in a slice is included in the result, but the second isn't.[/note]"},{"id":5077,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98155,"text":":2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to take the first two elements of the list:\r\n[!raw!]\r\nlist = [\"a\", \"b\", \"c\", \"d\"]\r\na = list[0{0}]","textContent":"[h1]List Slices[/h1]\r\n\r\nIf the first number in a slice is omitted, it is taken to be the start of the list.\r\nIf the second number is omitted, it is taken to be the end.\r\n[b]Example:[/b] [code format=\"py\" codeId=\"369\"]squares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\r\nprint(squares[[b]:7[/b]])\r\nprint(squares[[b]7:[/b]])[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\n[0, 1, 4, 9, 16, 25, 36]\r\n[49, 64, 81]\r\n>>>[/code]\r\n[note]Slicing can also be done on tuples.[/note]"},{"id":5078,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98156,"text":"[1, 25, 81]","isCorrect":true,"properties":{}},{"id":98157,"text":"[1, 25]","isCorrect":false,"properties":{}},{"id":98158,"text":"An error occurs","isCorrect":false,"properties":{}},{"id":98159,"text":"[0, 1, 4]","isCorrect":false,"properties":{}}],"question":"What is the output of this code?\r\nsqs = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\r\nprint(sqs[1::4])","textContent":"[h1]List Slices[/h1]\r\n\r\nList slices can also have a third number, representing the step, to include only alternate values in the slice. [code format=\"py\" codeId=\"370\"]squares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\r\nprint(squares[::2])\r\nprint(squares[2:8:3])[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\n[0, 4, 16, 36, 64]\r\n[4, 25]\r\n>>>[/code]\r\n[note][2:8:3] will include elements starting from the 2nd index up to the 8th with a step of 3.[/note]"},{"id":5079,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98160,"text":"[]","isCorrect":false,"properties":{}},{"id":98161,"text":"[49]","isCorrect":false,"properties":{}},{"id":98162,"text":"[49, 36]","isCorrect":true,"properties":{}}],"question":"What is the output of this code?\r\nsqs = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\r\nprint(sqs[7:5:-1])","textContent":"[h1]List Slices[/h1]\r\n\r\n[b]Negative [/b]values can be used in list slicing (and normal list indexing). When negative values are used for the first and second values in a slice (or a normal index), they count from the end of the list. [code format=\"py\" codeId=\"371\"]squares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\r\nprint(squares[1:-1])[/code]\r\n[b]Result:[/b][code format=\"raw\" ]>>>\r\n[1, 4, 9, 16, 25, 36, 49, 64]\r\n>>>[/code]\r\n[note]If a negative value is used for the step, the slice is done backwards.\r\nUsing [b][::-1][/b] as a slice is a common and idiomatic way to reverse a list.[/note]"}]}}