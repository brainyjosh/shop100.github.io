{"lesson":{"id":2287,"name":"Returning from Functions","type":0,"mode":1,"videoID":null,"tags":"functions","quizzes":[{"id":4587,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98060,"text":"len","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":98061,"text":"return","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":98062,"text":"return","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to define a function that compares the lengths of its arguments and returns the shortest one.\r\n[!raw!]\r\ndef shortest_string(x, y):\r\n  if len(x) <= {0}(y):\r\n    {1} x\r\n  else:\r\n    {2} y","textContent":"[h1]Returning from Functions[/h1]\r\n\r\nCertain functions, such as [b]int [/b]or [b]str[/b], return a value that can be used later. \r\nTo do this for your defined functions, you can use the [b]return [/b]statement.\r\n\r\n[b]For example:[/b] [code format=\"py\" codeId=\"334\"]def max(x, y):\r\n    if x >=y:\r\n        [b]return [/b]x\r\n    else:\r\n        [b]return [/b]y\r\n        \r\nprint(max(4, 7))\r\nz = max(8, 5)\r\nprint(z)[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\n7\r\n8\r\n>>>[/code]\r\n[note]The [b]return [/b]statement cannot be used outside of a function definition.[/note]"},{"id":5021,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98063,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the highest number this function prints if called?\r\ndef print_numbers():\r\n  print(1)\r\n  print(2)\r\n  return\r\n  print(4)\r\n  print(6)","textContent":"[h1]Returning from Functions[/h1]\r\n\r\nOnce you return a value from a function, it immediately stops being executed. Any code after the [b]return [/b]statement will never happen.\r\n[b]For example:[/b] [code format=\"py\" codeId=\"335\"]def add_numbers(x, y):\r\n  total = x + y\r\n  [b]return [/b]total\r\n  print(\"This won't be printed\")\r\n\r\nprint(add_numbers(4, 5))[/code]\r\n[b]Result: [/b][code format=\"raw\" ]>>>\r\n9\r\n>>>[/code]"}]}}