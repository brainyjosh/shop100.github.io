{"lesson":{"id":2431,"name":"Lists","type":0,"mode":1,"videoID":null,"tags":"lists","quizzes":[{"id":4992,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104786,"text":"4","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the result of this code?\r\nnums = [5, 4, 3, 2, 1]\r\nprint(nums[1])","textContent":"[h1]Lists[/h1]\r\n\r\n[b]Lists [/b]are another type of object in Python. They are used to store an indexed list of items. \r\nA list is created using [b]square brackets[/b] with [b]commas [/b]separating items.\r\nThe certain item in the list can be accessed by using its index in square brackets.\r\n[b]For example:[/b] [code format=\"py\" codeId=\"311\"]words = [\"Hello\", \"world\", \"!\"]\r\nprint(words[0])\r\nprint(words[1])\r\nprint(words[2])[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nHello\r\nworld\r\n!\r\n>>>[/code]\r\n[note]The first list item's index is [b]0[/b], rather than 1, as might be expected.[/note]"},{"id":4993,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98008,"text":"1","isCorrect":true,"properties":{}},{"id":98009,"text":"2","isCorrect":false,"properties":{}},{"id":98010,"text":"3","isCorrect":false,"properties":{}}],"question":"How many items are in this list?\r\n[2,]","textContent":"[h1]Lists[/h1]\r\n\r\nAn empty list is created with an empty pair of square brackets. [code format=\"py\" codeId=\"312\"]empty_list = []\r\nprint(empty_list)[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\n[]\r\n>>>[/code]\r\n[note]Most of the time, a comma won't follow the last item in a list. However, it is perfectly valid to place one there, and it is encouraged in some cases.[/note]"},{"id":4994,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98011,"text":"[","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":98012,"text":"2","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to create a list and print its 3rd element.\r\n[!raw!]\r\nlist = {0}42, 55, 67]\r\nprint(list[{1}])","textContent":"[h1]Lists[/h1]\r\n\r\nTypically, a list will contain items of a single item type, but it is also possible to include several different types. \r\nLists can also be nested within other lists. [code format=\"py\" codeId=\"313\"]number = 3\r\nthings = [\"string\", 0, [1, 2, number], 4.56]\r\nprint(things[1])\r\nprint(things[2])\r\nprint(things[2][2])[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\n0\r\n[1, 2, 3]\r\n3\r\n>>>[/code]\r\n[note]Lists of lists are often used to represent 2D grids, as Python lacks the multidimensional arrays that would be used for this in other languages.[/note]"},{"id":4995,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":98013,"text":"Line 2","isCorrect":false,"properties":{}},{"id":98014,"text":"Line 3","isCorrect":false,"properties":{}},{"id":98015,"text":"Line 4","isCorrect":true,"properties":{}}],"question":"Which line of code will cause an error?\r\nnum = [5, 4, 3, [2], 1]\r\nprint(num[0])\r\nprint(num[3][0])\r\nprint(num[5])","textContent":"[h1]Lists[/h1]\r\n\r\nIndexing out of the bounds of possible list values causes an IndexError. \r\nSome types, such as [b]strings[/b], can be indexed like lists. Indexing [b]strings [/b]behaves as though you are indexing a list containing each character in the string. \r\nFor other types, such as integers, indexing them isn't possible, and it causes a TypeError.[code format=\"py\" codeId=\"314\"]str = \"Hello world!\"\r\nprint(str[6])[/code]\r\n[b]Result:[/b] [code format=\"raw\" ]>>>\r\nw\r\n>>>[/code]"}]}}