{"lesson":{"id":2280,"name":"Operator Precedence","type":0,"mode":1,"videoID":null,"tags":"operator-precedence","quizzes":[{"id":4579,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97994,"text":"No","isCorrect":true,"properties":{}},{"id":97995,"text":"Yes","isCorrect":false,"properties":{}}],"question":"What is the result of this code?\r\nif 1 + 1 * 3 == 6:\r\n   print(\"Yes\")\r\nelse:\r\n   print(\"No\")","textContent":"[h1]Operator Precedence[/h1]\r\n\r\n[b]Operator precedence[/b] is a very important concept in programming. It is an extension of the mathematical idea of order of operations (multiplication being performed before addition, etc.) to include other operators, such as those in Boolean logic. \r\n\r\nThe below code shows that [b]==[/b] has a higher precedence than [b]or[/b]:[code format=\"py\" codeId=\"306\"]>>> False == False or True\r\n[b]True[/b]\r\n>>> False == (False or True)\r\n[b]False[/b]\r\n>>> (False == False) or True\r\n[b]True[/b][/code]\r\n[note]Python's order of operations is the same as that of normal mathematics: parentheses first, then exponentiation, then multiplication/division, and then addition/subtraction.[/note]"},{"id":4580,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99850,"text":"Yes","isCorrect":false,"properties":{}},{"id":99851,"text":"Yes  No","isCorrect":false,"properties":{}},{"id":99852,"text":"No","isCorrect":true,"properties":{}}],"question":"What is the result of this code?\r\nx = 4\r\ny= 2\r\nif not 1 + 1 == y or x == 4 and 7 == 8:\r\n  print(\"Yes\")\r\nelif x > y:\r\n  print(\"No\")","textContent":"[h1]Operator Precedence[/h1]\r\n\r\nThe following table lists all of Python's operators, from highest precedence to lowest. [img id=\"2504\" width=\"100%\"]"}]}}