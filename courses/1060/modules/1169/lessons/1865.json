{"lesson":{"id":1865,"name":"Joining Tables","type":0,"mode":1,"videoID":"6BfofgkrI3Y","tags":"join","quizzes":[{"id":3623,"number":1,"videoStart":3.5,"videoEnd":154.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":86079,"text":"Creates a temporary table with the joined tables' data","isCorrect":true,"properties":{}},{"id":86080,"text":"Removes joined tables","isCorrect":false,"properties":{}},{"id":86081,"text":"Removes one of the tables and splits it to the other","isCorrect":false,"properties":{}}],"question":"What does the Table Join do?","textContent":"[h1]Joining Tables[/h1]\r\n\r\nAll of the queries shown up until now have selected from just one table at a time.\r\n\r\nOne of the most beneficial features of SQL is the ability to combine data from two or more tables.\r\n\r\nIn the two tables that follow, the table named [b]customers [/b]stores information about customers: [img id=\"2830\" width=\"100%\"]\r\nThe [b]orders [/b]table stores information about individual orders with their corresponding amount: [img id=\"2831\" width=\"100%\"]\r\n[note]In SQL, \"[b]joining tables[/b]\" means combining data from two or more tables. A table join creates a [b]temporary table[/b] showing the data from the joined tables.[/note]"},{"id":3624,"number":2,"videoStart":155.0,"videoEnd":241.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":89040,"text":"SELECT","isCorrect":true,"properties":{}},{"id":89041,"text":"ORDER BY","isCorrect":true,"properties":{}},{"id":89042,"text":"DESC","isCorrect":true,"properties":{}},{"id":89043,"text":"ASC","isCorrect":false,"properties":{}},{"id":89044,"text":"WHERE","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to select ''id'' from ''students''. Order the results by id, in descending order.\r\n[!raw!]\r\n{0} id FROM students\r\n{1} id {2}","textContent":"[h1]Joining Tables[/h1]\r\n\r\nRather than storing the customer name in both tables, the [b]orders [/b]table contains a reference to the [b]customer ID[/b] that appears in the customers table. This approach is more efficient, as opposed to storing the same text values in both tables.\r\nIn order to be able to select the corresponding data from both tables, we will need to [b]join [/b]them on that condition.\r\n[note]Tap continue to see how![/note]"},{"id":3625,"number":3,"videoStart":242.0,"videoEnd":479.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96393,"text":"customers","isCorrect":true,"properties":{}},{"id":96394,"text":"WHERE","isCorrect":true,"properties":{}},{"id":96395,"text":"items","isCorrect":false,"properties":{}},{"id":96396,"text":"BY","isCorrect":false,"properties":{}},{"id":96397,"text":"ON","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to complete the following statement, which shows item names and the names of customers who bought the items.\r\n[!raw!]\r\nSELECT customers.name, items.names \r\nFROM {0}, items\r\n{1} items.seller_id =\r\n customers.id","textContent":"[h1]Joining Tables[/h1]\r\n\r\nTo join the two tables, specify them as a comma-separated list in the FROM clause: [code format=\"sql\"]SELECT customers.ID, customers.Name, orders.Name, orders.Amount\r\nFROM customers, orders\r\n[b]WHERE customers.ID=orders.Customer_ID\r\nORDER BY customers.ID;[/b][/code]\r\n[note]Each table contains \"ID\" and \"Name\" columns, so in order to select the correct ID and Name, [b]fully qualified names[/b] are used.[/note]\r\nNote that the WHERE clause \"joins\" the tables on the condition that the [b]ID [/b]from the [b]customers [/b]table should be equal to the [b]customer_ID [/b]of the [b]orders [/b]table.\r\n\r\n[b]Result:[/b] [img id=\"2832\" width=\"100%\"]\r\nThe returned data shows customer orders and their corresponding amount. \r\n[note]Specify multiple table names in the FROM by comma-separating them.[/note]"}]}}