{"lesson":{"id":1854,"name":"Sorting Results","type":0,"mode":1,"videoID":"hNN--F2STjw","tags":null,"quizzes":[{"id":3592,"number":1,"videoStart":8.0,"videoEnd":116.5,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96295,"text":"customers","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":96296,"text":"address","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":" Fill in the blanks to select the ''address'' from ''customers'', using the fully qualified name for the ''address'' column.\r\n[!raw!]\r\nSELECT {0}.{1} \r\nFROM customers;","textContent":"[h1]Fully Qualified Names[/h1]\r\n\r\nIn SQL, you can provide the table name prior to the column name, by separating them with a [b]dot[/b].\r\nThe following statements are equivalent: [code format=\"sql\"]SELECT City FROM customers;\r\n\r\nSELECT [b]customers.[/b]City FROM customers;[/code]\r\nThe term for the above-mentioned syntax is called the [b]\"fully qualified name\"[/b] of that column.\r\n[note]This form of writing is especially useful when working with multiple tables that may share the same column names.[/note]"},{"id":3593,"number":2,"videoStart":131.0,"videoEnd":261.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":105075,"text":"city","isCorrect":true,"properties":{}},{"id":105076,"text":"people","isCorrect":true,"properties":{}},{"id":105077,"text":"ORDER BY","isCorrect":true,"properties":{}},{"id":105078,"text":"LIMIT","isCorrect":false,"properties":{}},{"id":105079,"text":"BY","isCorrect":false,"properties":{}},{"id":105080,"text":"SELECT","isCorrect":false,"properties":{}}],"question":"Build a query to select ''name'' and ''city'' from the ''people'' table, and order by the ''id''.\r\n[!raw!]\r\nSELECT name, {0} \r\nFROM {1} {2} id;","textContent":"[h1]Order By[/h1]\r\n\r\n[b]ORDER BY[/b] is used with SELECT to [b]sort [/b]the returned data. \r\n\r\nThe following example sorts our [b]customers [/b]table by the [i]FirstName [/i]column.[code format=\"sql\" ]SELECT * FROM customers\r\n[b]ORDER BY[/b] FirstName;[/code]\r\n[b]Result:[/b] [img id=\"2800\" width=\"100%\"]\r\nAs you can see, the rows are ordered [b]alphabetically[/b] by the [b]FirstName[/b] column. [note]By default, the ORDER BY keyword sorts the results in [b]ascending [/b]order.[/note]"},{"id":3594,"number":3,"videoStart":262.5,"videoEnd":383.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":105081,"text":"name","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":105082,"text":"state","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to order the query results by ''name'', and then by ''state''.\r\n[!raw!]\r\nSELECT name, state, address\r\nFROM customers \r\nORDER BY {0}, {1};","textContent":"[h1]Sorting Multiple Columns[/h1]\r\n\r\nORDER BY can sort retrieved data by multiple columns. When using ORDER BY with more than one column, separate the list of columns to follow ORDER BY with [b]commas[/b]. \r\nHere is the [b]customers [/b]table, showing the following records: [img id=\"2801\" width=\"100%\"]\r\nTo order by [b]LastName[/b] and [b]Age[/b]: [code format=\"sql\" ]SELECT * FROM customers \r\nORDER BY LastName[b],[/b] Age;[/code]\r\nThis ORDER BY statement returns the following result: [img id=\"2802\" width=\"100%\"]\r\nAs we have two [b]Smith[/b]s, they will be ordered by the [b]Age [/b]column in ascending order.\r\n[note]The ORDER BY command starts ordering in the same sequence as the columns. It will order by the first column listed, then by the second, and so on. [/note]"}]}}