{"lesson":{"id":2589,"name":"Arithmetic Operators","type":0,"mode":1,"videoID":null,"tags":"operators","quizzes":[{"id":5376,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102795,"text":"*","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":102796,"text":"z","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to display the result of the multiplication of x and y.\r\n[!raw!]\r\nint x = 42;\r\nint y = 7;\r\nint z = x{0}y;\r\nConsole.WriteLine({1});","textContent":"[h1]Operators[/h1]\r\n\r\nAn [b]operator [/b]is a symbol that performs mathematical or logical manipulations.\r\n\r\n[h2]Arithmetic Operators[/h2]\r\nC# supports the following arithmetic operators: [img id=\"2449\" width=\"100%\"]\r\n[b]For example: [/b][code format=\"cs\" codeId=\"818\"]int x = 10;\r\nint y = 4;\r\nConsole.WriteLine([b]x-y[/b]);\r\n\r\n//Outputs 6[/code]"},{"id":5377,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102794,"text":"3","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\nint x = 16;\r\nint y = 5;\r\nConsole.WriteLine(x/y);","textContent":"[h1]Division[/h1]\r\n\r\nThe division operator (/) divides the first operand by the second. If the operands are both integers, any remainder is dropped in order to return an integer value.\r\n[b]Example: [/b][code format=\"cs\" codeId=\"819\"]int x = 10 / 4;\r\nConsole.WriteLine(x);\r\n\r\n// Outputs [b]2[/b][/code]\r\n[note]Division by 0 is undefined and will crash your program.[/note]"},{"id":5378,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102791,"text":"*","isCorrect":false,"properties":{}},{"id":102792,"text":"%","isCorrect":true,"properties":{}},{"id":102793,"text":"+","isCorrect":false,"properties":{}}],"question":"Which operator is used to determine the remainder?","textContent":"[h1]Modulus[/h1]\r\n\r\nThe modulus operator (%) is informally known as the remainder operator because it returns the remainder of an integer division. \r\n[b]For example:[/b] [code format=\"cs\" codeId=\"820\"]int x = 25 % 7;\r\nConsole.WriteLine(x);\r\n\r\n// Outputs [b]4[/b][/code]"},{"id":5379,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102805,"text":"(","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":102806,"text":")","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the missing parentheses to have x equal 15.\r\n[!raw!]\r\nint x = {0}2 + 3{1}* 3;\r\nConsole.WriteLine(x);","textContent":"[h1]Operator Precedence[/h1]\r\n\r\nOperator [b]precedence [/b]determines the grouping of terms in an expression, which affects how an expression is evaluated. Certain operators take higher precedence over others; for example, the multiplication operator has higher precedence than the addition operator.\r\n[b]For example:[/b] [code format=\"cs\" codeId=\"821\"]int x = 4+3*2;\r\nConsole.WriteLine(x);\r\n// Outputs [b]10[/b][/code]\r\nThe program evaluates 3*2 first, and then adds the result to 4.\r\nAs in mathematics, using [b]parentheses [/b]alters operator precedence. [code format=\"cs\" codeId=\"822\"]int x = (4 + 3) *2;\r\nConsole.WriteLine(x);\r\n\r\n// Outputs [b]14[/b][/code]\r\nThe operations within parentheses are performed first. If there are parenthetical expressions nested within one another, the expression within the innermost parentheses is evaluated first. \r\n[note]If none of the expressions are in parentheses, multiplicative (multiplication, division, modulus) operators will be evaluated before additive (addition, subtraction) operators. Operators of equal precedence are evaluated from left to right.[/note]"}]}}