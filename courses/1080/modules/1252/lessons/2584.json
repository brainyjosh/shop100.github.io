{"lesson":{"id":2584,"name":"Printing Text","type":0,"mode":1,"videoID":null,"tags":"output","quizzes":[{"id":5367,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102654,"text":"WriteLine","isCorrect":true,"properties":{}},{"id":102655,"text":"\"Learning C#\"","isCorrect":true,"properties":{}},{"id":102656,"text":"Read","isCorrect":false,"properties":{}},{"id":102657,"text":"print","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to display \"Learning C#\".\r\n[!raw!]\r\nConsole.{0}({1});","textContent":"[h1]Displaying Output[/h1]\r\n\r\nMost applications require some [b]input [/b]from the user and give [b]output [/b]as a result.\r\nTo display text to the console window you use the [b]Console.Write[/b] or [b]Console.WriteLine[/b] methods. The difference between these two is that [b]Console.WriteLine[/b] is followed by a line terminator, which moves the cursor to the next line after the text output. \r\nThe program below will display Hello World! to the console window: [code format=\"cs\" codeId=\"811\"]static void Main(string[] args)\r\n{\r\n  [b] Console.WriteLine[/b](\"Hello World!\");\r\n}[/code]\r\n[note]Note the [b]parentheses [/b]after the [b]WriteLine [/b]method. This is the way to pass data, or arguments, to methods. In our case [b]WriteLine [/b]is the method and we pass \"Hello World!\" to it as an argument. String arguments must be enclosed in quotation marks.[/note]"},{"id":5368,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":102690,"text":"4","isCorrect":false,"properties":{}},{"id":102691,"text":"2","isCorrect":false,"properties":{}},{"id":102692,"text":"42","isCorrect":true,"properties":{}},{"id":102693,"text":"24","isCorrect":false,"properties":{}}],"question":"What is the output of this code?\r\nint a = 4;\r\nint b = 2;\r\nConsole.Write(a);\r\nConsole.Write(b);","textContent":"[h1]Displaying Output[/h1]\r\n\r\nWe can display variable values to the console window: [code format=\"cs\" codeId=\"812\"]static void Main(string[] args)\r\n{\r\n   int x = 89;\r\n   [b]Console.WriteLine(x);[/b]\r\n}\r\n// Outputs 89[/code]\r\nTo display a[b] formatted string[/b], use the following syntax: [code format=\"cs\" codeId=\"813\"]static void Main(string[] args)\r\n{\r\n   int x = 10;\r\n   double y = 20;\r\n \r\n   [b]Console.WriteLine(\"x = {0}; y = {1}\", x, y);[/b]\r\n}\r\n// Output: x = 10; y = 20[/code]\r\nAs you can see, the value of [b]x[/b] replaced [b]{0}[/b] and the value of [b]y[/b] replaced [b]{1}[/b]. \r\n[note]You can have as many variable placeholders as you need. (i.e.: {3}, {4}, etc.).[/note]"}]}}