{"lesson":{"id":2674,"name":"Indexers","type":0,"mode":1,"videoID":null,"tags":"indexers","quizzes":[{"id":5546,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":103847,"text":"n","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\nstring str = \"I know C#\";\r\nchar x = str[3];\r\nConsole.WriteLine(x);","textContent":"[h1]Indexers[/h1]\r\n\r\nAn [b]indexer [/b]allows objects to be indexed like an array. \r\nAs discussed earlier, a string variable is actually an object of the [b]String [/b]class. Further, the String class is actually an array of Char objects. In this way, the string class implements an indexer so we can access any character (Char object) by its index: [code format=\"cs\" codeId=\"892\"]string str = \"Hello World\";\r\nchar x = str[b][4][/b];\r\nConsole.WriteLine(x);\r\n//Outputs \"o\"[/code]\r\n[note]Arrays use integer indexes, but indexers can use any type of index, such as strings, characters, etc.[/note]"},{"id":5547,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":103852,"text":"this","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":103853,"text":"name","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to define a valid indexer:\r\n[!raw!]\r\nclass Person {\r\n  private string name;\r\n  public char {0}[int index] {\r\n    get {\r\n      return {1}[index];\r\n    }\r\n  }\r\n}","textContent":"[h1]Indexers[/h1]\r\n\r\nDeclaration of an indexer is to some extent similar to a property. The difference is that indexer accessors require an [b]index[/b]. \r\nLike a property, you use [b]get [/b]and [b]set [/b]accessors for defining an indexer. However, where properties return or set a specific data member, indexers return or set a particular value from the object instance. \r\nIndexers are defined with the [b]this [/b]keyword.\r\n[b]For example:[/b] [code format=\"cs\" ]class Clients {\r\n  private string[] names = new string[10];\r\n\r\n [b] public string this[int index] {\r\n    get {\r\n      return names[index];\r\n    }\r\n    set {\r\n      names[index] = value;\r\n    }\r\n  }[/b]\r\n}[/code]\r\nAs you can see, the indexer definition includes the [b]this [/b]keyword and an index, which is used to get and set the appropriate value.\r\nNow, when we declare an object of class Clients, we use an index to refer to specific objects like the elements of an array: [code format=\"cs\" codeId=\"893\"]Clients c = new Clients();\r\nc[b][0][/b] = \"Dave\";\r\nc[b][1][/b] = \"Bob\";\r\n\r\nConsole.WriteLine(c[b][1][/b]);\r\n//Outputs \"Bob\"  [/code]\r\n[note]You typically use an indexer if the class represents a list, collection, or array of objects.[/note]"}]}}