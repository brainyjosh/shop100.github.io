{"lesson":{"id":2631,"name":"Working with Strings","type":0,"mode":1,"videoID":null,"tags":"strings","quizzes":[{"id":5518,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106275,"text":"5","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\nstring s = \"SoloLearn is awesome\";\r\nConsole.Write(s.IndexOf('e'));","textContent":"[h1]Strings[/h1]\r\n\r\nItâ€™s common to think of strings as arrays of characters. In reality, strings in C# are objects.\r\nWhen you declare a [b]string [/b]variable, you basically instantiate an object of type [b]String[/b].\r\nString objects support a number of useful properties and methods:\r\n[b]Length [/b]returns the length of the string.\r\n[b]IndexOf(value)[/b] returns the index of the first occurrence of the value within the string.\r\n[b]Insert(index, value)[/b] inserts the value into the string starting from the specified index.\r\n[b]Remove(index)[/b] removes all characters in the string after the specified index.\r\n[b]Replace(oldValue, newValue)[/b]  replaces the specified value in the string.\r\n[b]Substring(index, length)[/b] returns a substring of the specified length, starting from the specified index. If length is not specified, the operation continues to the end of the string.\r\n[b]Contains(value)[/b] returns true if the string contains the specified value.\r\n\r\nThe examples below demonstrate each of the String members: [code format=\"cs\" codeId=\"882\"]string a = \"some text\";\r\nConsole.WriteLine(a.[b]Length[/b]);\r\n//Outputs 9\r\n\r\nConsole.WriteLine(a.[b]IndexOf[/b]('t'));\r\n//Outputs 5\r\n\r\n a = a.[b]Insert[/b](0, \"This is \");\r\nConsole.WriteLine(a);\r\n//Outputs \"This is some text\"\r\n\r\na = a.[b]Replace[/b](\"This is\", \"I am\");\r\nConsole.WriteLine(a);\r\n//Outputs \"I am some text\"\r\n\r\nif(a.[b]Contains[/b](\"some\"))\r\n  Console.WriteLine(\"found\");\r\n//Outputs \"found\"\r\n\r\na = a.[b]Remove[/b](4);\r\nConsole.WriteLine(a);\r\n//Outputs \"I am\"\r\n\r\na = a.[b]Substring[/b](2);\r\nConsole.WriteLine(a);\r\n//Outputs \"am\"[/code]\r\nYou can also access characters of a string by its index, just like accessing elements of an array: [code format=\"cs\" codeId=\"883\"]string a = \"some text\";\r\nConsole.WriteLine([b]a[2][/b]);\r\n//Outputs \"m\"[/code]\r\n[note]Indexes in strings are similar to arrays, they start from 0.[/note]"},{"id":5519,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":103694,"text":"s","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":103695,"text":"]","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to assign the last character of the string to the x variable:\r\n[!raw!]\r\nstring s = \"Hello\";\r\nchar x;\r\nx = {0}[s.Length-1{1};","textContent":"[h1]Working with Strings[/h1]\r\n\r\nLet's create a program that will take a string, replace all occurrences of the word \"dog\" with \"cat\" and output the first sentence only. [code format=\"cs\" codeId=\"884\"]string text = \"This is some text about a dog. The word dog appears in this text a number of times. This is the end.\";\r\n\r\ntext = text.Replace(\"dog\", \"cat\");\r\ntext = text.Substring(0, text.IndexOf(\".\")+1);\r\n\r\nConsole.WriteLine(text);\r\n//Outputs: \"This is some text about a cat.\"[/code]\r\nThe code above replaces all occurrences of \"dog\" with \"cat\". After that it takes a substring of the original string starting from the first index until the first occurrence of a period character.\r\nWe add one to the index of the period to include the period in the substring.\r\n[note]C# provides a solid collection of tools and methods to work and manipulate strings. You could, for example, find the number of times a specific word appears in a book with ease, using those methods.[/note]"}]}}