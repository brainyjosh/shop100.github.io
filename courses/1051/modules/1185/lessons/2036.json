{"lesson":{"id":2036,"name":"Challenge 2","type":1,"mode":0,"videoID":null,"tags":null,"quizzes":[{"id":3986,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":39815,"text":"12","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of the following code?\r\nint f=1, i=2;\r\nwhile(++i<5) {\r\n   f*=i;\r\n}\r\ncout<<f;","textContent":null},{"id":3981,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":24068,"text":"fstream","isCorrect":true,"properties":{}},{"id":24069,"text":"if","isCorrect":true,"properties":{}},{"id":24070,"text":"is_open","isCorrect":true,"properties":{}},{"id":24071,"text":"ifstream","isCorrect":false,"properties":{}},{"id":24072,"text":"open","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to declare a file object and an associated file \"myfile.txt\", and write \"I work with files\" to the file if the file is open. Otherwise, print \"Error\" to the screen.\r\n[!raw!]\r\n#include <iostream>\r\n#include <{0}>\r\nint main() {\r\nofstream fileObj(\"myfile.txt\");\r\n{1} (fileObj.{2}()) {\r\n fileObj << \"I work with files\";\r\n fileObj.close();\r\n} else {\r\n  cout << \"Error\" << endl;\r\n  }\r\n}","textContent":null},{"id":3982,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106381,"text":"class","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":106382,"text":"public","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to declare \"MyClass\", publicly inherited from class \"A\".\r\n[!raw!]\r\n{0} MyClass : {1} A {\r\npublic:\r\n int newMember;\r\n};","textContent":null},{"id":3983,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":38403,"text":"template","isCorrect":true,"properties":{}},{"id":38404,"text":"MyClass","isCorrect":true,"properties":{}},{"id":38405,"text":"arg","isCorrect":true,"properties":{}},{"id":38406,"text":"T","isCorrect":false,"properties":{}},{"id":38407,"text":"class","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to declare a template class \"MyClass\", with two constructors. One of the constructors takes parameter of template type and prints its value to the screen.\r\n[!raw!]\r\n{0} <class T>\r\nclass MyClass {\r\npublic:\r\n MyClass() {\r\n   }\r\n {1}(T arg) { \r\n   cout << {2}; \r\n   }\r\n};","textContent":null},{"id":3988,"number":5,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":8,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":33542,"text":"template <class T, class U>","isCorrect":false,"properties":{}},{"id":33543,"text":"T greater(T a, U b) {","isCorrect":false,"properties":{}},{"id":33544,"text":"if (a > b) {","isCorrect":false,"properties":{}},{"id":33545,"text":"return a; }","isCorrect":false,"properties":{}},{"id":33546,"text":"return b;","isCorrect":false,"properties":{}},{"id":33547,"text":"}","isCorrect":false,"properties":{}}],"question":"Rearrange the code to declare a template function \"greater\", taking two arguments and returning the greater one. Arguments are of template types T and U, respectively.","textContent":null}]}}