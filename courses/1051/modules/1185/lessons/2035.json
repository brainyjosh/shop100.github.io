{"lesson":{"id":2035,"name":"Challenge 1","type":1,"mode":0,"videoID":null,"tags":null,"quizzes":[{"id":3987,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104478,"text":"char *str = \"hello\";","isCorrect":false,"properties":{}},{"id":104479,"text":"char str = \"hello\";","isCorrect":true,"properties":{}},{"id":104480,"text":"const int* p1;","isCorrect":false,"properties":{}},{"id":104481,"text":"double a = 1;","isCorrect":false,"properties":{}}],"question":"Which of the following declarations is illegal?","textContent":null},{"id":3974,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":24016,"text":"class","isCorrect":true,"properties":{}},{"id":24017,"text":"~MyClass()","isCorrect":true,"properties":{}},{"id":24018,"text":"private","isCorrect":true,"properties":{}},{"id":24019,"text":"!MyClass()","isCorrect":false,"properties":{}},{"id":24020,"text":"struct","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to declare a class \"MyClass\", with corresponding constructor and destructor. Constructor initializes class's private integer member named \"mem\".\r\n[!raw!]\r\n{0} MyClass {\r\npublic:\r\nMyClass() {\r\n   mem = 12; }\r\n{1} {\r\n   }\r\n{2}:\r\n int mem;\r\n};","textContent":null},{"id":3975,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":24021,"text":"public","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":24022,"text":"test*","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":24023,"text":"->","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to declare a class \"test\" with a \"foo()\" public member function. Declare a pointer \"myPtr\" to \"test\" and call \"foo()\" via the pointer.\r\n[!raw!]\r\nclass test{\r\n{0}:\r\nvoid foo() {\r\n   }\r\n};\r\n{1} myPtr = new test();\r\nmyPtr{2}foo();","textContent":null},{"id":3976,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":72582,"text":"template","isCorrect":true,"properties":{}},{"id":72583,"text":"ARG","isCorrect":true,"properties":{}},{"id":72584,"text":"return","isCorrect":true,"properties":{}},{"id":72585,"text":"class","isCorrect":false,"properties":{}},{"id":72586,"text":"T","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to declare a template function \"doubler\", taking one argument and returning its value, multiplied by 2. The argument is a template argument named \"ARG\".\r\n[!raw!]\r\n{0} <class {1}>\r\nARG doubler(ARG value)\r\n{\r\n   {2} value * 2; \r\n}","textContent":null},{"id":3977,"number":5,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":24029,"text":"T","isCorrect":true,"properties":{}},{"id":24030,"text":"if","isCorrect":true,"properties":{}},{"id":24031,"text":"return","isCorrect":true,"properties":{}},{"id":24032,"text":"else","isCorrect":false,"properties":{}},{"id":24033,"text":"class","isCorrect":false,"properties":{}}],"question":"Declare a template function, taking three arguments of type T. If the third argument is greater than the first, return the second argument's value. Otherwise, return the sum of the second and third arguments.\r\n[!raw!]\r\ntemplate <class T>\r\n{0} foo(T a, T b, T c)\r\n{\r\n {1} (c > a) {\r\n  return b;\r\n}\r\n{2} b + c;\r\n}","textContent":null},{"id":3978,"number":6,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":8,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":24046,"text":"void foo(int arg) {","isCorrect":false,"properties":{}},{"id":24047,"text":"try {","isCorrect":false,"properties":{}},{"id":24048,"text":"if (arg > 999) throw -100; }","isCorrect":false,"properties":{}},{"id":24049,"text":"catch (int x) {","isCorrect":false,"properties":{}},{"id":24050,"text":"cout << \"error!\" << endl;  }","isCorrect":false,"properties":{}},{"id":24051,"text":"}","isCorrect":false,"properties":{}}],"question":"Rearrange the code to define a function \"foo\", which throws an exception with a value of \"-100\" if its parameter is greater than 999. Then \"foo\" catches its exceptions and prints \"error!\" to the screen.","textContent":null},{"id":3979,"number":7,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":8,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":97182,"text":"class MyClass {","isCorrect":false,"properties":{}},{"id":97183,"text":"public:","isCorrect":false,"properties":{}},{"id":97184,"text":"void foo() {}","isCorrect":false,"properties":{}},{"id":97185,"text":"};","isCorrect":false,"properties":{}}],"question":"Rearrange the code to declare a class \"MyClass\", with a \"foo()\" public member function. ","textContent":null},{"id":3980,"number":8,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":24104,"text":"try","isCorrect":true,"properties":{}},{"id":24105,"text":"throw","isCorrect":true,"properties":{}},{"id":24106,"text":"catch","isCorrect":true,"properties":{}},{"id":24107,"text":"finally","isCorrect":false,"properties":{}},{"id":24108,"text":"exception","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to enter two integers and print their division to the screen. Use try and catch blocks to handle division by 0.\r\n[!raw!]\r\n{0} {\r\nint a; int b;\r\ncin >> a >> b;\r\nif (b == 0)\r\n {1} 0;\r\ncout << a / b << endl;\r\n} {2} (int err) {\r\n cout << \"error\" << endl;\r\n}","textContent":null}]}}