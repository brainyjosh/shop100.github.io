{"lesson":{"id":1712,"name":"Abstraction","type":0,"mode":1,"videoID":null,"tags":"classes","quizzes":[{"id":3149,"number":1,"videoStart":0.0,"videoEnd":67.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":78116,"text":"an object type","isCorrect":false,"properties":{}},{"id":78117,"text":"focus on the essential qualities of something","isCorrect":true,"properties":{}},{"id":78118,"text":"nothing","isCorrect":false,"properties":{}}],"question":"What does abstraction mean?","textContent":"[h1]Abstraction [/h1]\r\n\r\nData [b]abstraction [/b]is the concept of providing only essential information to the outside world. It's a process of representing essential features [b]without including implementation details[/b].\r\n\r\nA good real-world example is a [i]book[/i]: When you hear the term book, you don't know the exact specifics, i.e.: the page count, the color, the size, but you understand [b]the idea of a book[/b] - the abstraction of the book.\r\n[note]The concept of [b]abstraction [/b]is that we focus on essential qualities, rather than the specific characteristics of one particular example.[/note]"},{"id":3150,"number":2,"videoStart":68.5,"videoEnd":103.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":94997,"text":"We can have a concept, but it's separate from any specific instance","isCorrect":true,"properties":{}},{"id":94998,"text":"An abstraction is a way to declare functions for a class","isCorrect":false,"properties":{}},{"id":94999,"text":"Abstraction is not related to object-oriented programming","isCorrect":false,"properties":{}}],"question":"Which statement about abstraction is true?","textContent":"[h1]Abstraction[/h1]\r\n\r\n[b]Abstraction [/b]means, that we can have an idea or a concept that is completely separate from any specific instance.\r\nIt is one of the fundamental building blocks of object oriented programming.\r\n \r\nFor example, when you use [b]cout[/b], you're actually using the [b]cout [/b]object of the class [b]ostream[/b]. This streams data to result in standard output.[code format=\"cpp\"]cout << \"Hello!\" << endl;[/code]\r\n[note]In this example, there is no need to understand how [b]cout [/b]will display the text on the user's screen. The only thing you need to know to be able to use it is the public interface.[/note]"},{"id":3151,"number":3,"videoStart":104.0,"videoEnd":165.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":78983,"text":"abstraction","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the foundation that supports other fundamentals of object-orientation, such as inheritance and polymorphism?","textContent":"[h1]Abstraction[/h1]\r\n\r\nAbstraction allows us to write a single bank account class, and then create different objects based on the class, for individual bank accounts, rather than creating a separate class for each bank account. [img id=\"2464\" width=\"100%\"]\r\n[note]Abstraction acts as a foundation for the other object orientation fundamentals, such as [b]inheritance [/b]and [b]polymorphism[/b]. These will be discussed later in the course.[/note]"}]}}