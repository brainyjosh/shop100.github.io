{"lesson":{"id":2744,"name":"Reading and Writing Files","type":0,"mode":1,"videoID":null,"tags":"files","quizzes":[{"id":5794,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":8,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":113556,"text":"f = File.open(\"story.txt\", \"w\")","isCorrect":false,"properties":{}},{"id":113557,"text":"f.puts(\"I know Ruby!\")","isCorrect":false,"properties":{}},{"id":113558,"text":"f.close","isCorrect":false,"properties":{}}],"question":"Rearrange the code to open a file called \"story.txt\" and write a line of text to it.","textContent":"[h1]Writing Files[/h1]\r\n\r\nThe [b]puts [/b]and [b]write [/b]methods can be used for writing content to a file.\r\nThe difference between the two is that [b]puts [/b]adds a line break to the end of strings, while [b]write [/b]does not.\r\n[b]For example:[/b] [code format=\"rb\" ]file = File.new(\"test.txt\", \"w+\")\r\nfile.[b]puts[/b](\"some text\")\r\nfile.close[/code]\r\n[note]Remember to [b]close [/b]the file after performing the file operations.[/note]"},{"id":5795,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":113561,"text":"{","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":113562,"text":"x","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to open a file and write content to it in a code block.\r\n[!raw!]\r\nFile.open(\"file.txt\", \"w\") {0}\r\n  |x| {1}.puts(\"some content\") \r\n}","textContent":"[h1]Writing Files[/h1]\r\n\r\nIf we want to write to an existing file, we can use a block of code to perform the write operation.\r\nWith this code Ruby will automatically close the file.\r\n[b]For example:[/b][code format=\"rb\" ]File.open(\"file.txt\", \"w+\") {\r\n  |file| file.puts(\"some text\") \r\n}[/code]\r\n[note]This shorter way makes sure the file closes at the end of the block.[/note]"},{"id":5796,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":113566,"text":"1","isCorrect":false,"properties":{}},{"id":113567,"text":"2","isCorrect":true,"properties":{}},{"id":113568,"text":"3","isCorrect":false,"properties":{}}],"question":"How many lines will the following code output?\r\nf = File.new(\"a.txt\", \"w+\")\r\nf.puts(\"1\")\r\nf.write(\"2\")\r\nf.puts(\"3\")\r\nf.close\r\nputs File.read(\"a.txt\")","textContent":"[h1]Reading Files[/h1]\r\n\r\nTo read the entire contents of a file the File.[b]read [/b]method can be used.\r\n[b]For example:[/b] [code format=\"rb\" codeId=\"1094\"]f = File.new(\"test.txt\", \"w+\")\r\nf.puts(\"a line of text\")\r\nf.puts(\"another line of text\")\r\nf.close\r\n\r\nputs File.[b]read[/b](\"test.txt\")\r\n\r\n# Outputs:\r\n# a line of text\r\n# another line of text[/code]"},{"id":5797,"number":4,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":113581,"text":"an array","isCorrect":true,"properties":{}},{"id":113582,"text":"a class","isCorrect":false,"properties":{}},{"id":113583,"text":"a file","isCorrect":false,"properties":{}},{"id":113584,"text":"a struct","isCorrect":false,"properties":{}}],"question":"File.readlines returns the contents of the file as:","textContent":"[h1]Reading Files[/h1]\r\n\r\nWe can also read the file contents line-by-line using the [b]readlines [/b]method.\r\n[b]For example:[/b] [code format=\"rb\" codeId=\"1095\"]File.open(\"test.txt\", \"a+\") {\r\n  |file| file.puts(\"a line of text\")\r\n  file.puts(\"another line of text\")\r\n}\r\n\r\nFile.[b]readlines[/b](\"test.txt\").each {\r\n  |line| puts \" --- #{line}\"\r\n}[/code]\r\n[note]The [b]readlines [/b]method reads the entire file based on individual lines and returns those lines in an array.[/note]"}]}}