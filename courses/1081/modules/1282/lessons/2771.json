{"lesson":{"id":2771,"name":"else/elsif/unless Statements","type":0,"mode":1,"videoID":null,"tags":"else-statements","quizzes":[{"id":5680,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":112903,"text":"if","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":112904,"text":"else","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":112905,"text":"end","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to check the grade variable and output the appropriate corresponding message:\r\n[!raw!]\r\ngrade = 83\r\n{0} grade >= 70 \r\n  puts \"Passed!\"\r\n{1}\r\n  puts \"Failed.\"\r\n{2}","textContent":"[h1]else Statements[/h1]\r\n\r\nAn [b]else [/b]block in an [b]if[/b] expression contains code that is called when the [b]if[/b] conditional evaluates to [b]false[/b].\r\n[b]For example:[/b] [code format=\"rb\" codeId=\"993\"]age = 15\r\nif age > 18 \r\n  puts \"Welcome\"\r\n[b]else[/b] \r\n  puts \"Too young\"\r\nend\r\n\r\n# outputs \"Too young\"[/code]\r\n[note]The [b]end [/b]keyword is only needed for the [b]if[/b] statement, as the [b]else [/b]block is part of the [b]if[/b] expression.[/note]"},{"id":5877,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":112907,"text":"elsif","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"In Ruby, the \"else if\" block is represented with the keyword:","textContent":"[h1]elsif Statements[/h1]\r\n\r\nThe [b]elsif [/b](short for else if) block is useful when you want to test multiple conditions.\r\nA series of [b]if elsif[/b] expressions can have a final [b]else [/b]block, which is called if none of the [b]if[/b] or [b]elsif[/b] expressions are true. \r\n[b]For example:[/b] [code format=\"rb\" codeId=\"994\"]num = 8\r\nif num == 3\r\n  puts \"Number is 3\"\r\n[b]elsif [/b]num == 10\r\n  puts \"Number is 10\"\r\n[b]elsif [/b]num == 7\r\n  puts \"Number is 7\"\r\nelse\r\n  puts \"Not found\"\r\nend[/code]\r\n[note]When an [b]elsif [/b]block executes the entire if expression is exited.[/note]"},{"id":5878,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":112910,"text":"7","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\nx = 5\r\nunless x < 8\r\n  x += 3\r\nelse \r\n  x += 2\r\nend\r\nputs x","textContent":"[h1]unless[/h1]\r\n\r\nThe [b]unless [/b]expression is the opposite of an [b]if[/b] expression. It executes code when a conditional is [b]false[/b].\r\n[b]For example:[/b] [code format=\"rb\" codeId=\"999\"]a = 42\r\n[b]unless [/b]a < 10\r\n puts \"Yes\"\r\nelse\r\n puts \"No\"\r\nend\r\n\r\n# outputs \"Yes\"[/code]\r\nYou can use an [b]else [/b]block with the [b]unless[/b], just like you did with the [b]if[/b] expression. The [b]end [/b]keyword is also required to close the block.\r\n\r\nThe [b]if[/b] and [b]unless [/b]modifiers can also be used to execute code. [code format=\"rb\" codeId=\"998\"]a = 42\r\nputs \"Yes\" [b]if[/b] a > 10\r\n\r\nputs \"Yes\" [b]unless [/b]a < 10[/code]\r\nThis code before the [b]if[/b]  executes only if the condition evaluates to [b]true[/b].\r\nThe code before the [b]unless [/b]executes only if the condition is [b]false[/b].\r\n[note]As you can see, Ruby code is comparably short and easy to read, making it a very intuitive programming language.[/note]"}]}}