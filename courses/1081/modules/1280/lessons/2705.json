{"lesson":{"id":2705,"name":"Variables","type":0,"mode":1,"videoID":null,"tags":"variables","quizzes":[{"id":5631,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":112753,"text":"=","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":112754,"text":"42","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to assign the value 42 to the variable.\r\n[!raw!]\r\nmyVar {0} {1}","textContent":"[h1]Variables[/h1]\r\n\r\nA [b]variable [/b]is a named storage location for a value. It is called variable because the information stored in that location can be changed when the program is running. \r\nTo assign a variable a value, use the [b]equal sign[/b].\r\nFor example: [code format=\"rb\" ]x = 8[/code]\r\nThis assignment statement declares a variable named [b]x[/b] and gives it the value 8. The equal sign is called the assignment operator.\r\nWe can later use the variable name to access its value. For example, to output the value stored in the variable, we can use [b]puts [/b]or [b]print [/b]and refer to the variable name: [code format=\"rb\" codeId=\"972\"]x = 8\r\nputs x\r\n\r\n# outputs 8[/code]\r\n[note]Variable names may consist of alphanumeric characters and the underscore character (_), but [b]cannot [/b]begin with a capital letter.[/note]"},{"id":5632,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":112759,"text":"Basic variable","isCorrect":false,"properties":{}},{"id":112760,"text":"Constant variable","isCorrect":true,"properties":{}}],"question":"What type of variable is Y?\r\nx = 8\r\nY = x\r\nputs Y","textContent":"[h1]Constants[/h1]\r\n\r\nVariables beginning with a capital letter are called [b]constants[/b].\r\nThe value of a constant variable cannot be changed once it has been assigned.\r\n[b]For example:[/b] [code format=\"rb\" codeId=\"973\"]MyNum = 42\r\n\r\n# Trying to change the value produces a warning\r\n\r\nMyNum = 8\r\n[b]# warning: already initialized constant MyNum [/b][/code]"},{"id":5634,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":112769,"text":"#","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":112770,"text":"}","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to insert the value of the name variable into the string:\r\n[!raw!]\r\nname = \"David\"\r\nputs \"Hello, {0}{name{1}\"","textContent":"[h1]Data Types[/h1]\r\n\r\nAll variables in Ruby can be of all [b]data types[/b]. \r\nRuby automatically determines data type by the value assigned to the variable. \r\n[b]For example:[/b] [code format=\"rb\" ]x = 42 # integer\r\ny = 1.58 # floating point value\r\nz = \"Hello\" # string[/code]\r\nYou can reassign a different value to a variable at any time.\r\nTo insert the value of a variable into a double quote string (a string is a sequence of characters, such as \"Hello\"), use the # symbol and curly brackets with the variable name. \r\n[b]For example:[/b] [code format=\"rb\" codeId=\"974\"]age = 42\r\nputs \"He is [b]#{age}[/b] years old\"\r\n\r\n# outputs \"He is 42 years old\"[/code]"}]}}