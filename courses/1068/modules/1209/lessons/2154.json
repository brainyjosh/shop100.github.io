{"lesson":{"id":2154,"name":"Getters and Setters","type":0,"mode":1,"videoID":"wF18uVxjtvc","tags":"classes","quizzes":[{"id":4247,"number":1,"videoStart":43.0,"videoEnd":187.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95452,"text":"int","isCorrect":true,"properties":{}},{"id":95453,"text":"x","isCorrect":true,"properties":{}},{"id":95454,"text":"void","isCorrect":true,"properties":{}},{"id":95455,"text":"String","isCorrect":false,"properties":{}},{"id":95456,"text":"double","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to define the set and get methods.\r\n[!raw!]\r\nclass A {\r\n   private int x;\t\t\t\r\n   public {0} getX() {\r\n    return {1};\r\n}\r\n   public {2} setX(int x) {\r\n    this.x = x;\r\n   }\r\n}","textContent":"[h1]Getters & Setters[/h1]\r\n\r\n[b]Getters [/b]and [b]Setters [/b]are used to effectively protect your data, particularly when creating classes. For each variable, the [b]get [/b]method returns its value, while the [b]set [/b]method sets the value.\r\n\r\n[b]Getters [/b]start with [b]get[/b], followed by the variable name, with the first letter of the variable name capitalized.\r\n[b]Setters [/b]start with [b]set[/b], followed by the variable name, with the first letter of the variable name capitalized.\r\n\r\n[b]Example:[/b] [code format=\"java\"]public class Vehicle {\r\n  private String color;\r\n\r\n  // Getter\r\n  public String [b]getColor[/b]() {\r\n    return color;\r\n  }\r\n\r\n // Setter\r\n  public void [b]setColor[/b](String c) {\r\n    this.color = c;\r\n  }\r\n}[/code]\r\nThe [b]getter [/b]method returns the value of the attribute.\r\nThe [b]setter [/b]method takes a parameter and assigns it to the attribute.\r\n[note]The keyword [b]this [/b]is used to refer to the current object. Basically, [b]this.color[/b] is the [b]color [/b]attribute of the current object.[/note]"},{"id":4248,"number":2,"videoStart":187.0,"videoEnd":265.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99577,"text":"setAge","isCorrect":true,"properties":{}},{"id":99578,"text":"initAge","isCorrect":false,"properties":{}},{"id":99579,"text":"getAge","isCorrect":false,"properties":{}},{"id":99580,"text":"Age","isCorrect":false,"properties":{}}],"question":"What would the name of the setter method for the class variable named \"age\" be?","textContent":"[h1]Getters & Setters[/h1]\r\n\r\nOnce our getter and setter have been defined, we can use it in our [b]main[/b]:[code format=\"java\" codeId=\"759\"]public static void main(String[ ] args) {\r\n  Vehicle v1 = new Vehicle();\r\n  v1.setColor(\"Red\");\r\n  System.out.println(v1.getColor());\r\n}\r\n\r\n//Outputs \"Red\"[/code]\r\nGetters and setters allow us to have control over the values. You may, for example, validate the given value in the setter before actually setting the value.\r\n[note]Getters and setters are fundamental building blocks for [b]encapsulation[/b], which will be covered in the next module.[/note]"}]}}