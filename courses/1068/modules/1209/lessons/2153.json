{"lesson":{"id":2153,"name":"Method Return Types","type":0,"mode":1,"videoID":"-IJ5izjbWIA","tags":"methods","quizzes":[{"id":4244,"number":1,"videoStart":333.0,"videoEnd":406.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104420,"text":"void","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"If you do not want your method to return anything, you should use the keyword:","textContent":"[h1]The Return Type[/h1]\r\n\r\nThe [b]return [/b]keyword can be used in methods to return a value.\r\nFor example, we could define a method named [b]sum [/b]that returns the sum of its two parameters.[code format=\"java\" ]static [b]int [/b]sum(int val1, int val2) {\r\n   [b]return [/b]val1 + val2;\r\n}[/code]\r\nNotice that in the method definition, we defined the[b] return type[/b] before we defined the method name. For our sum method, it is [b]int[/b], as it takes two parameters of the type [b]int [/b]and returns their sum, which is also an [b]int[/b].\r\n[note]The [b]static [/b]keyword will be discussed in a future lesson.[/note]\r\nNow, we can use the method in our main.[code format=\"java\" codeId=\"755\"]class MyClass {\r\n\r\nstatic int sum(int val1, int val2) {\r\n  return val1 + val2;\r\n}\r\n\r\n  public static void main(String[ ] args) {\r\n    int x = [b]sum[/b](2, 5);\r\n    System.out.println(x);\r\n  }\r\n}\r\n// Outputs \"7\"[/code]\r\nAs the method returns a value, we can assign it to a variable.\r\n[note]When you do not need to return any value from your method, use the keyword [b]void[/b].\r\nNotice the [b]void [/b]keyword in the definition of the main method - this means that main does not return anything.[/note]"},{"id":4245,"number":2,"videoStart":407.0,"videoEnd":513.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":100244,"text":"int","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":100245,"text":"x","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to declare an integer, and pass it as a parameter to the test() method.\r\n[!raw!]\r\npublic static void main(String[ ] args) {\r\n   {0} x = 10;\r\n   test({1});\r\n}\r\nstatic void test(int x) {\t\t\t\r\n   System.out.println(x);\r\n}","textContent":"[h1]The Return Type [/h1]\r\n\r\nTake a look at the same code from our previous lesson with explaining comments, so you can better understand how it works: [code format=\"java\" ][b]// returns an int value 5[/b]\r\nstatic int returnFive() {\r\n  return 5;\r\n}\r\n\r\n[b]// has a parameter[/b]\r\nstatic void sayHelloTo(String name) {\r\n  System.out.println(\"Hello \" + name);\r\n}\r\n\r\n[b]// simply prints\"Hello World!\"[/b]\r\nstatic void sayHello() {\r\n  System.out.println(\"Hello World!\");\r\n}[/code]\r\nHaving gained knowledge of method return types and parameters, let's take another look at the definition of the main method.[code format=\"java\" ] public static [b]void [/b]main(String[ ] args)[/code]\r\n[note]This definition indicates that the [b]main [/b]method takes an array of Strings as its parameters, and does not return a value.[/note]"},{"id":4246,"number":3,"videoStart":513.0,"videoEnd":607.0,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104482,"text":"30","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What output results from this code?\r\npublic static void main(String[ ] args) {\r\n  int x = 10;\r\n  int y = myFunc(x);\r\n  System.out.println(y);\r\n}\r\npublic static int myFunc(int x) {\r\n  return x*3;\r\n}","textContent":"[h1]The Return Type[/h1]  \r\n\r\nLet's create a method that takes two parameters of type [b]int [/b]and returns the greater one, then call it in [b]main[/b]: [code format=\"java\" codeId=\"756\"]public static void main(String[ ] args) {\r\n  int res = max(7, 42);\r\n  System.out.println(res); //42\r\n}\r\n\r\nstatic [b]int [/b]max([b]int [/b]a, [b]int [/b]b) {\r\n  if(a > b) {\r\n    [b]return [/b]a;\r\n  }\r\n  else {\r\n    [b]return [/b]b;\r\n  }\r\n}[/code]"}]}}