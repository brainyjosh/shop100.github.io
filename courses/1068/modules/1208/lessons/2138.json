{"lesson":{"id":2138,"name":"Java Comments","type":0,"mode":1,"videoID":"bTbDkhFy3e4","tags":"comments","quizzes":[{"id":4203,"number":1,"videoStart":12.0,"videoEnd":64.5,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95322,"text":"** characters at the beginning of the line","isCorrect":false,"properties":{}},{"id":95323,"text":"*/ characters at the beginning of the line","isCorrect":false,"properties":{}},{"id":95324,"text":"// characters at the end of the line","isCorrect":false,"properties":{}},{"id":95325,"text":"// characters at the beginning of the line ","isCorrect":true,"properties":{}}],"question":"Single-line comments are created using:","textContent":"[h1]Comments[/h1]\r\n\r\nThe purpose of including comments in your code is to explain what the code is doing.\r\nJava supports both single and multi-line comments. All characters that appear within a comment are ignored by the Java compiler.\r\n\r\nA [b]single-line[/b] comment starts with [b]two forward slashes [/b]and continues until it reaches the end of the line. \r\nFor example:[code format=\"java\"][b]// this is a single-line comment[/b]\r\nx = 5; [b]// a single-line comment after code[/b][/code]\r\n[note]Adding comments as you write code is a good practice, because they provide clarification and understanding when you need to refer back to it, as well as for others who might need to read it.[/note]"},{"id":4205,"number":2,"videoStart":65.0,"videoEnd":106.5,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95326,"text":"/*","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":95327,"text":"*/","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Make this text a multi-line comment.\r\n[!raw!]\r\n{0} some\r\n* comment text\r\n{1}","textContent":"[h1]Multi-Line Comments[/h1]\r\n\r\nJava also supports comments that span multiple lines.\r\nYou start this type of comment with a forward slash followed by an asterisk, and end it with an asterisk followed by a forward slash. \r\nFor example: [code format=\"java\"]/*  This is also a\r\n    comment spanning\r\n    multiple lines */[/code]\r\nNote that Java does not support nested multi-line comments. \r\nHowever, you can nest single-line comments within multi-line comments. [code format=\"java\"]/* This is a single-line comment:\r\n\r\n    // a single-line comment\r\n\r\n */[/code]"},{"id":4206,"number":3,"videoStart":107.0,"videoEnd":142.6,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95328,"text":"// characters in the beginning of the line.","isCorrect":false,"properties":{}},{"id":95329,"text":"// and */ characters to wrap a comment.","isCorrect":false,"properties":{}},{"id":95330,"text":"/* and */ characters to wrap a comment.","isCorrect":false,"properties":{}},{"id":95331,"text":"/** and */ characters to wrap a comment.","isCorrect":true,"properties":{}}],"question":"You can add a Java doc style comment by using:","textContent":"[h1]Documentation Comments[/h1]\r\n\r\n[b]Documentation comments[/b] are special comments that have the appearance of multi-line comments, with the difference being that they generate external documentation of your source code. These begin with a forward slash followed by two asterisks, and end with an asterisk followed by a forward slash. \r\nFor example:[code format=\"java\"]/** This is a documentation comment */\r\n\r\n/** This is also a\r\n    documentation comment */[/code]\r\n[b]Javadoc [/b]is a tool which comes with JDK and it is used for generating Java code documentation in HTML format from Java source code which has required documentation in a predefined format.\r\n\r\nWhen a documentation comment begins with more than two asterisks, Javadoc assumes that you want to create a \"box\" around the comment in the source code. It simply ignores the extra asterisks.\r\nFor example: [code format=\"java\"]/**********************\r\n\r\nThis is the start of a method\r\n\r\n***********************/[/code]\r\n[note]This will retain just the text \"This is the start of a method\" for the documentation.[/note]"}]}}