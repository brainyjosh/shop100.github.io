{"lesson":{"id":2141,"name":"Increment & Decrement","type":0,"mode":1,"videoID":"ydcTx6idTs0","tags":"operators","quizzes":[{"id":4212,"number":1,"videoStart":4.0,"videoEnd":83.5,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99494,"text":"++","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to print 11.\r\n[!raw!]\r\nint a = 10;\r\n{0}a;\r\nSystem.out.println(a);","textContent":"[h1]Increment Operators[/h1]\r\n\r\n[b][/b]An [b]increment [/b]or [b]decrement [/b]operator provides a more convenient and compact way to increase or decrease the value of a variable by [b]one[/b]. \r\nFor instance, the statement [b]x=x+1;[/b] can be simplified to [b]++x;[/b] \r\nExample: [code format=\"java\" codeId=\"720\"]int test = 5;\r\n++test; // test is now 6[/code]\r\nThe [b]decrement [/b]operator (--) is used to decrease the value of a variable by one. [code format=\"java\" codeId=\"721\"]int test = 5;\r\n--test; // test is now 4[/code]"},{"id":4213,"number":2,"videoStart":83.5,"videoEnd":167.5,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99495,"text":"14","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of the following code?\r\nint x = 14; \r\nSystem.out.println(x++);","textContent":"[h1]Prefix & Postfix[/h1]\r\n\r\nTwo forms, [b]prefix [/b]and [b]postfix[/b], may be used with both the increment and decrement operators.\r\nWith prefix form, the operator appears before the operand, while in postfix form, the operator appears after the operand. Below is an explanation of how the two forms work:\r\n[b]Prefix[/b]: Increments the variable's value and uses the new value in the expression. \r\nExample:[code format=\"java\" codeId=\"722\"]int x = 34;\r\nint y = [b]++x[/b]; // y is 35[/code]\r\nThe value of x is first incremented to 35, and is then assigned to y, so the values of both x and y are now 35.\r\n[b]Postfix[/b]: The variable's value is first used in the expression and is then increased. \r\nExample:[code format=\"java\" codeId=\"723\"]int x = 34;\r\nint y = [b]x++[/b]; // y is 34[/code]\r\nx is first assigned to y, and is then incremented by one. Therefore, x becomes 35, while y is assigned the value of 34.\r\n[note]The same applies to the [b]decrement [/b]operator.[/note]"},{"id":4214,"number":3,"videoStart":168.0,"videoEnd":297.5,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99496,"text":"x","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":99497,"text":"y","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the missing parts in the following code to print 13.\r\n[!raw!]\r\nint x = 25; int y;\r\ny = {0} - 12;\r\nSystem.out.println({1});","textContent":"[h1]Assignment Operators [/h1]\r\n\r\nYou are already familiar with the [b]assignment [/b]operator (=), which assigns a value to a variable. [code format=\"java\" ]int value = 5;[/code]\r\nThis assigned the value 5 to a variable called [b]value [/b]of type [b]int[/b].\r\n\r\nJava provides a number of assignment operators to make it easier to write code.\r\n[b]Addition and assignment (+=):[/b] [code format=\"java\" codeId=\"724\"]int num1 = 4;\r\nint num2 = 8;\r\n[b]num2 += num1[/b]; // num2 = num2 + num1;\r\n\r\n// num2 is 12 and num1 is 4[/code]\r\n[b]Subtraction and assignment (-=):[/b] [code format=\"java\" codeId=\"725\"]int num1 = 4;\r\nint num2 = 8;\r\n[b]num2 -= num1;[/b] // num2 = num2 - num1;\r\n\r\n// num2 is 4 and num1 is 4[/code]\r\n[note]Similarly, Java supports multiplication and assignment (*=), division and assignment (/=), and remainder and assignment (%=).[/note]"}]}}