{"lesson":{"id":2173,"name":"Inner Classes","type":0,"mode":1,"videoID":"DZWlO1jCVas","tags":"inner-classes","quizzes":[{"id":4296,"number":1,"videoStart":155.0,"videoEnd":308.0,"linkedVideoID":null,"type":8,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99638,"text":"public class Person {","isCorrect":false,"properties":{}},{"id":99639,"text":"   class Hand {","isCorrect":false,"properties":{}},{"id":99640,"text":"   public void shake() {","isCorrect":false,"properties":{}},{"id":99641,"text":"   System.out.println(\"Hi\");  }","isCorrect":false,"properties":{}},{"id":99642,"text":"   }   }","isCorrect":false,"properties":{}}],"question":"Rearrange the code to have an inner class Hand, which has a method called \"shake\" that prints \"Hi\".","textContent":"[h1]Inner Classes[/h1]\r\n\r\nJava supports [b]nesting [/b]classes; a class can be a member of another class.\r\nCreating an inner class is quite simple. Just write a class within a class. Unlike a class, an inner class can be private. Once you declare an inner class private, it cannot be accessed from an object outside the class.\r\n[b]Example:[/b] [code format=\"java\" codeId=\"784\"]class Robot {\r\n  int id;\r\n  Robot(int i) {\r\n    id = i;\r\n    Brain b = new Brain();\r\n    b.think();\r\n  }\r\n\r\n [b] private class Brain {\r\n    public void think() {\r\n      System.out.println(id + \" is thinking\");\r\n    }\r\n  }\r\n[/b]\r\n}[/code]\r\n[note]The class [b]Robot [/b]has an inner class [b]Brain[/b]. The inner class can access all of the member variables and methods of its outer class, but it cannot be accessed from any outside class.[/note]"}]}}