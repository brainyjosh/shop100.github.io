{"lesson":{"id":2169,"name":"Downcasting","type":0,"mode":1,"videoID":"9UylOdopV6k","tags":"casting","quizzes":[{"id":4285,"number":1,"videoStart":0.0,"videoEnd":175.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":100265,"text":"B","isCorrect":true,"properties":{}},{"id":100266,"text":"A","isCorrect":false,"properties":{}},{"id":100267,"text":"nothing","isCorrect":false,"properties":{}}],"question":"What is the output of this code?\r\nclass A {\r\n   public void print() {\r\n      System.out.println(\"A\");\r\n   }\r\n}\r\nclass B extends A {\r\n   public void print() {\r\n      System.out.println(\"B\");\r\n   }\r\n   public static void main(String[ ] args) {\r\n    A object = new B();\r\n    B b = (B) object;\r\n    b.print();\r\n   }\r\n}","textContent":"[h1]Type Casting[/h1]\r\n\r\nFor classes, there are two types of casting.\r\n\r\n[h2]Upcasting[/h2]\r\nYou can cast an instance of a subclass to its superclass.\r\nConsider the following example, assuming that Cat is a subclass of Animal. [code format=\"java\" ]Animal a = new Cat();[/code]\r\nJava automatically upcasted the Cat type variable to the Animal type.\r\n\r\n[h2]Downcasting[/h2]\r\nCasting an object of a superclass to its subclass is called [b]downcasting[/b].\r\nExample: [code format=\"java\" ]Animal a = new Animal();\r\n([b](Cat)[/b]a).makeSound();[/code]\r\nThis will try to cast the variable a to the [b]Cat [/b]type and call its makeSound() method.\r\n[note]Why is upcasting automatic, downcasting manual? Well, upcasting can never fail. But if you have a group of different Animals and want to downcast them all to a Cat, then there's a chance that some of these Animals are actually Dogs, so the process fails.[/note]"}]}}