{"lesson":{"id":2174,"name":"Enums","type":0,"mode":1,"videoID":"A0GHaVRlYAQ","tags":"enums","quizzes":[{"id":4448,"number":1,"videoStart":14.0,"videoEnd":199.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95571,"text":"classes","isCorrect":false,"properties":{}},{"id":95572,"text":"members of a fixed set","isCorrect":true,"properties":{}},{"id":95573,"text":"interfaces","isCorrect":false,"properties":{}},{"id":95574,"text":"integers","isCorrect":false,"properties":{}}],"question":"Enums are used to declare variables that represent...","textContent":"[h1]Enums[/h1]\r\n\r\nAn Enum is a special type used to define collections of constants. \r\nHere is a simple Enum example: [code format=\"java\"][b]enum [/b]Rank {\r\n  SOLDIER,\r\n  SERGEANT,\r\n  CAPTAIN\r\n}[/code]\r\nNote that the values are [b]comma-separated.[/b]\r\nYou can refer to the constants in the enum above with the [b]dot [/b]syntax. [code format=\"java\"]Rank a = Rank[b].SOLDIER[/b];[/code]\r\n[note]Basically, Enums define variables that represent members of a fixed set.[/note]"},{"id":4299,"number":2,"videoStart":199.0,"videoEnd":337.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99665,"text":"enum","isCorrect":true,"properties":{}},{"id":99666,"text":"BLUE","isCorrect":true,"properties":{}},{"id":99667,"text":"RED","isCorrect":false,"properties":{}},{"id":99668,"text":"GREEN","isCorrect":false,"properties":{}},{"id":99669,"text":"static","isCorrect":false,"properties":{}},{"id":99670,"text":"class","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to create an Enum called \"Color\", with the values RED, BLUE, GREEN.\r\n[!raw!]\r\npublic {0} Color  {\r\n  RED, {1}, GREEN;\r\n}","textContent":"[h1]Enums[/h1]\r\n\r\nAfter declaring an Enum, we can check for the corresponding values with, for example, a [b]switch [/b]statement.[code format=\"java\" codeId=\"787\"]Rank a = Rank.SOLDIER;\r\n\r\nswitch(a) {\r\n  case SOLDIER:\r\n    System.out.println(\"Soldier says hi!\");\r\n    break;\r\n  case SERGEANT:\r\n    System.out.println(\"Sergeant says Hello!\");\r\n  break;\r\n  case CAPTAIN:\r\n    System.out.println(\"Captain says Welcome!\");\r\n    break;\r\n}\r\n//Outputs \"Soldier says hi!\"[/code]"},{"id":4300,"number":3,"videoStart":337.0,"videoEnd":450.5,"linkedVideoID":null,"type":2,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":100285,"text":"0","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"What is the output of this code?\r\nenum Color  {\r\n  RED, BLUE, GREEN;\r\n}\r\nclass PrintColor {\r\n   public static void main(String[ ] args) {\r\n   Color color = Color.RED; \r\n   switch(color) {\r\n   case BLUE:\r\n     System.out.println(\"1\");\r\n   break;\r\n   case GREEN:\r\n     System.out.println(\"2\");\r\n   break;\r\n   default:\r\n     System.out.println(\"0\");\r\n   break;\t\t \r\n   }\r\n}\r\n}","textContent":"[h1]Enums[/h1]\r\n\r\nYou should always use Enums when a variable (especially a method parameter) can only take one out of a small set of possible values.\r\nIf you use Enums instead of integers (or String codes), you increase compile-time checking and avoid errors from passing in invalid constants, and you document which values are legal to use.\r\n[note]Some sample Enum uses include month names, days of the week, deck of cards, etc.[/note]"}]}}