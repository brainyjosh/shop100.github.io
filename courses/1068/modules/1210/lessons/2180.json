{"lesson":{"id":2180,"name":"LinkedLists","type":0,"mode":1,"videoID":"1cCByj85yQc","tags":"linkedlist","quizzes":[{"id":4313,"number":1,"videoStart":71.0,"videoEnd":146.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99699,"text":"LinkedList","isCorrect":true,"properties":{}},{"id":99700,"text":"<String>","isCorrect":true,"properties":{}},{"id":99701,"text":"\"Hey\"","isCorrect":true,"properties":{}},{"id":99702,"text":"0","isCorrect":true,"properties":{}},{"id":99703,"text":"ArrayList","isCorrect":false,"properties":{}},{"id":99704,"text":"1","isCorrect":false,"properties":{}},{"id":99705,"text":"\"Bye\"","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to create a LinkedList, add \"Hey\", and print it.\r\n[!raw!]\r\n{0}<String> list = \r\n      new LinkedList{1}();\r\nlist.add({2});\r\nSystem.out.println(list.get({3}));","textContent":"[h1]LinkedList[/h1]\r\n\r\nThe [b]LinkedList [/b]is very similar in syntax to the [b]ArrayList[/b].\r\nYou can easily change an ArrayList to a LinkedList by changing the object type. [code format=\"java\" codeId=\"794\"]import java.util.[b]LinkedList[/b];\r\n\r\npublic class MyClass {\r\n  public static void main(String[ ] args) {\r\n    [b]LinkedList[/b]<String> c = new [b]LinkedList[/b]<String>();\r\n    c.add(\"Red\");\r\n    c.add(\"Blue\");\r\n    c.add(\"Green\");\r\n    c.add(\"Orange\");\r\n    c.remove(\"Green\");\r\n    System.out.println(c);\r\n  }\r\n}\r\n// Outputs [Red, Blue, Orange][/code]\r\n[note]You cannot specify an initial capacity for the [b]LinkedList[/b].[/note]"},{"id":4314,"number":2,"videoStart":146.0,"videoEnd":223.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":106123,"text":"LinkedList","isCorrect":true,"properties":{}},{"id":106124,"text":"ArrayList","isCorrect":false,"properties":{}}],"question":"For a program with large numbers of inserts and deletes, it is better to use the...","textContent":"[h1]LinkedList vs. ArrayList[/h1]\r\n\r\nThe most notable difference between the [b]LinkedList [/b]and the [b]ArrayList [/b]is in the way they store objects.\r\nThe ArrayList is better for [b]storing [/b]and [b]accessing [/b]data, as it is very similar to a normal array.\r\nThe LinkedList is better for [b]manipulating [/b]data, such as making numerous inserts and deletes.\r\n\r\nIn addition to storing the object, the LinkedList stores the memory address (or link) of the element that follows it. It's called a LinkedList because each element contains a link to the neighboring element. [img id=\"2443\" width=\"100%\"]\r\nYou can use the enhanced for loop to iterate over its elements. [code format=\"java\" codeId=\"795\"]LinkedList<String> c = new LinkedList<String>();\r\nc.add(\"Red\");\r\nc.add(\"Blue\");\r\nc.add(\"Green\");\r\nc.add(\"Orange\");\r\nc.remove(\"Green\");\r\n\r\nfor(String s: c) {\r\n  System.out.println(s);\r\n}\r\n/* Output:\r\nRed\r\nBlue\r\nOrange\r\n */[/code]\r\n[note]Summary:\r\n- Use an [b]ArrayList [/b]when you need rapid access to your data. \r\n- Use a [b]LinkedList [/b]when you need to make a large number of inserts and/or deletes.[/note]"}]}}