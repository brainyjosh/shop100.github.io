{"lesson":{"id":2176,"name":"Multiple Exceptions","type":0,"mode":1,"videoID":"odhReeuuCXo","tags":"exceptions","quizzes":[{"id":4304,"number":1,"videoStart":5.0,"videoEnd":201.5,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99673,"text":"throws","isCorrect":true,"properties":{}},{"id":99674,"text":"IOException","isCorrect":true,"properties":{}},{"id":99675,"text":"throw","isCorrect":true,"properties":{}},{"id":99676,"text":"new","isCorrect":true,"properties":{}},{"id":99677,"text":"try","isCorrect":false,"properties":{}},{"id":99678,"text":"catch","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to create a method that throws an IOException if the parameter is negative.\r\n[!raw!]\r\npublic void do(int x)\r\n  {0} {1} {\r\n  if(x<0)\r\n  {\r\n   {2} {3} IOException();\r\n  }\r\n}","textContent":"[h1]throw[/h1]\r\n\r\nThe [b]throw [/b]keyword allows you to manually generate exceptions from your methods. Some of the numerous available exception types include the IndexOutOfBoundsException, IllegalArgumentException, ArithmeticException, and so on. \r\nFor example, we can throw an ArithmeticException in our method when the parameter is 0. [code format=\"java\" codeId=\"789\"]int div(int a, int b) [b]throws ArithmeticException[/b] {\r\n  if(b == 0) {\r\n    [b]throw new ArithmeticException(\"Division by Zero\");[/b]\r\n  } else {\r\n    return a / b;\r\n  }\r\n}[/code]\r\nThe [b]throws [/b]statement in the method definition defines the type of Exception(s) the method can throw. \r\nNext, the [b]throw [/b]keyword throws the corresponding exception, along with a custom message.\r\nIf we call the [b]div [/b]method with the second parameter equal to 0, it will throw an ArithmeticException with the message \"Division by Zero\".\r\n[note]Multiple exceptions can be defined in the throws statement using a [b]comma-separated[/b] list.[/note]"},{"id":4305,"number":2,"videoStart":201.5,"videoEnd":336.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":95591,"text":"Only one","isCorrect":false,"properties":{}},{"id":95592,"text":"Only two","isCorrect":false,"properties":{}},{"id":95593,"text":"As many as you need","isCorrect":true,"properties":{}},{"id":95594,"text":"None","isCorrect":false,"properties":{}}],"question":"How many catch blocks can a try/catch block contain?","textContent":"[h1]Exception Handling[/h1]\r\n\r\nA single try block can contain multiple catch blocks that handle different exceptions separately.\r\n[b]Example:[/b] [code format=\"java\"]try {\r\n  //some code\r\n} [b]catch [/b](ExceptionType1 e1) {\r\n  //Catch block\r\n} [b]catch [/b](ExceptionType2 e2) {\r\n  //Catch block\r\n} [b]catch [/b](ExceptionType3 e3) {\r\n  //Catch block\r\n}[/code]\r\n[note]All catch blocks should be ordered from most specific to most general. \r\nFollowing the specific exceptions, you can use the [b]Exception [/b]type to handle all other exceptions as the last catch. [/note]"}]}}