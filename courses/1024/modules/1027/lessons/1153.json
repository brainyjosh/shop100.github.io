{"lesson":{"id":1153,"name":"Object Initialization","type":0,"mode":1,"videoID":"0TL5SRttIs0","tags":"objects","quizzes":[{"id":1463,"number":1,"videoStart":6.0,"videoEnd":208.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":94411,"text":"{","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":94412,"text":"}","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks:\r\n[!raw!]\r\nsimba = {0}category: \"lion\", \r\ngender: \"male\"{1}","textContent":"[h1]Object Initialization [/h1]\r\n\r\nUse the [b]object literal[/b] or [b]initializer [/b]syntax to create single objects.[code format=\"js\"]var John = {name: \"John\", age: 25};\r\nvar James = {name: \"James\", age: 21};[/code]"},{"id":1464,"number":2,"videoStart":209.0,"videoEnd":314.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":105054,"text":"category)","isCorrect":false,"properties":{"prefix":"","postfix":";"}}],"question":"Complete the following expression to display the \"simba\" object's \"category\" property on the screen:\r\n[!raw!]\r\ndocument.write(simba.{0}","textContent":"[h1]Using Object Initializers [/h1]\r\n\r\nSpaces and line breaks are not important. An object definition can span multiple lines.[code format=\"js\" ]var John = {\r\n  name: \"John\",\r\n  age: 25\r\n};\r\nvar James = {\r\n  name: \"James\",\r\n  age: 21\r\n};[/code]\r\nNo matter how the object is created, the syntax for accessing the properties and methods does not change.[code format=\"js\" codeId=\"691\"]document.write(John.age);\r\n//Outputs 25[/code]"}]}}