{"lesson":{"id":1152,"name":"Creating Your Own Objects","type":0,"mode":1,"videoID":"6xLcSTDeB7A","tags":"objects","quizzes":[{"id":1457,"number":1,"videoStart":4.0,"videoEnd":207.0,"linkedVideoID":null,"type":3,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":94401,"text":"title","isCorrect":false,"properties":{"prefix":"","postfix":""}},{"id":94402,"text":"director","isCorrect":false,"properties":{"prefix":"","postfix":""}}],"question":"Fill in the blanks to create  a constructor function:\r\n[!raw!]\r\nfunction movie(title, director) {\r\n  this.title = {0};\r\n  this.director = {1};\r\n}","textContent":"[h1]The Object Constructor[/h1]\r\n\r\nIn the previous lesson, we created an object using the [b]object literal[/b] (or initializer) syntax.[code format=\"js\"]var person = {\r\nname: \"John\", age: 42, favColor: \"green\"\r\n};[/code]\r\nThis allows you to create only a single object.\r\nSometimes, we need to set an \"[b]object type[/b]\" that can be used to create a number of objects of a single type.\r\nThe standard way to create an \"object type\" is to use an object [b]constructor function[/b]. [code format=\"js\"]function person(name, age, color) {\r\n  this.name = name;\r\n  this.age = age;\r\n  this.favColor = color;\r\n}[/code]\r\nThe above function (person) is an object constructor, which takes parameters and assigns them to the object properties. \r\n[note]The [b]this [/b]keyword refers to the [b]current object[/b].\r\nNote that [b]this [/b]is not a variable. It is a keyword, and its value cannot be changed.[/note]"},{"id":1459,"number":2,"videoStart":247.0,"videoEnd":317.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":104474,"text":"var","isCorrect":false,"properties":{}},{"id":104475,"text":"new","isCorrect":true,"properties":{}},{"id":104476,"text":"inst","isCorrect":false,"properties":{}},{"id":104477,"text":"make","isCorrect":false,"properties":{}}],"question":"What keyword is used for creating an instance of an object?","textContent":"[h1]Creating Objects[/h1]\r\n\r\nOnce you have an object constructor, you can use the [b]new [/b]keyword to create new objects of the same type.[code format=\"js\" codeId=\"689\"]var p1 = [b]new [/b]person(\"John\", 42, \"green\");\r\nvar p2 = [b]new [/b]person(\"Amy\", 21, \"red\");\r\n\r\ndocument.write(p1.age); // Outputs 42\r\ndocument.write(p2.name); // Outputs \"Amy\"[/code]\r\n[note][i]p1 [/i]and [i]p2 [/i]are now objects of the [b]person [/b]type. Their properties are assigned to the corresponding values.[/note]"},{"id":1460,"number":3,"videoStart":317.0,"videoEnd":518.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":99259,"text":"object's name","isCorrect":true,"properties":{}},{"id":99260,"text":"property's name","isCorrect":true,"properties":{}},{"id":99261,"text":"constructor function's name","isCorrect":false,"properties":{}},{"id":99262,"text":"keyword \"this\"","isCorrect":false,"properties":{}}],"question":"Which two components are necessary in order to use information contained within an object?","textContent":"[h1]Creating Objects[/h1]\r\n\r\nConsider the following example.[code format=\"js\" codeId=\"690\"]function person (name, age) {\r\n  this.name = name;\r\n  this.age = age;\r\n}\r\nvar John = new person(\"John\", 25);\r\nvar James = new person(\"James\", 21);[/code]  \r\nAccess the object's properties by using the [b]dot syntax[/b], as you did before. [img id=\"2766\" width=\"100%\"]"}]}}