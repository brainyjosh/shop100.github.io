{"lesson":{"id":2374,"name":"Custom Table Cells","type":0,"mode":1,"videoID":null,"tags":null,"quizzes":[{"id":4870,"number":1,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":59968,"text":"prototype","isCorrect":true,"properties":{}},{"id":59969,"text":"terminator","isCorrect":false,"properties":{}},{"id":59970,"text":"customizator","isCorrect":false,"properties":{}},{"id":59971,"text":"singleCell","isCorrect":false,"properties":{}}],"question":"The single cell that shows up in the table view on the storyboard is called a...","textContent":" [h1]Custom Table Cells[/h1]\r\n\r\nThe individual rows in a table view are managed by [b]table view cells[/b]. The single cell shown in the table view controller scene in your storyboard acts as a [b]prototype [/b]for the other cells in the table view, so any design and/or behavior assigned to this cell will display in all of the others.\r\nIn our list, a simple [b]label [/b]for each table view cell will display the ToDo item's name.\r\nTo do this find a Label object in the Object library and drag it onto the table cell. Place the Label object close to the left side of the table cell, aligned to the center of the cell. Also, stretch it to the end of the cell. [img id=\"1030\" width=\"100%\"] \r\nChoose File > New > File. A dialog appears. To its left, and under iOS, select Source. [b]Select Cocoa Touch Class[/b], and click Next. [img id=\"1036\" width=\"100%\"] \r\nIn the [b]Class [/b]field, type the name of our items' cell, which is Item. \r\nSelect [b]UITableViewCell [/b]in the \"Subclass of\" field. The name of the class will change to [i]ItemTableViewCell[/i]. \r\nMake sure that the Language option is set to [b]Swift[/b]. [img id=\"1035\" width=\"70%\"] \r\nClick [b]Next[/b].\r\nThe save location defaults to your project directory. Leaving the defaults as they are, click [b]Create[/b].\r\nXcode creates a file that defines the [b]ItemTableViewCell [/b]class as [i]ItemTableViewCell.swift[/i]\r\n[note]This creates a class for our cells, inherited from the [b]UITableViewCell [/b]class. We can now configure the items in our table.[/note]"},{"id":4871,"number":2,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":1,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":60051,"text":"Attributes inspector","isCorrect":true,"properties":{}},{"id":60052,"text":"Size inspector","isCorrect":false,"properties":{}},{"id":60053,"text":"Connection inspector","isCorrect":false,"properties":{}},{"id":60054,"text":"View inspector","isCorrect":false,"properties":{}}],"question":"Use the ... to connect the table view cell to a custom class.","textContent":"[h1]Configuring a Custom Cell[/h1]\r\n\r\nTo connect the table view cell in the scene to our just-created custom cell subclass, select the [b]Table View Cell[/b] in the storyboard's outline view. [img id=\"1034\" width=\"50%\"] \r\n\r\nWith the table view cell selected, open the [b]Attributes inspector[/b] in the Utility area.\r\nIn the[b] Attributes inspector[/b], find the field labeled [b]Identifier [/b]and type [b]ItemTableViewCell[/b].  [img id=\"1037\" width=\"60%\"] \r\nOpen the [b]Identity inspector[/b]. In the field labeled [b]Class[/b], select [b]ItemTableViewCell[/b]. [img id=\"1038\" width=\"60%\"]\r\n[note]The class of our cell prototype is now set to the newly created [b]ItemTableViewCell [/b]class.[/note]"},{"id":4872,"number":3,"videoStart":0.0,"videoEnd":0.0,"linkedVideoID":null,"type":6,"linkedQuizID":null,"tip":null,"hint":null,"time":0,"answers":[{"id":96759,"text":"@IBOutlet","isCorrect":true,"properties":{}},{"id":96760,"text":"UILabel!","isCorrect":true,"properties":{}},{"id":96761,"text":"let","isCorrect":false,"properties":{}},{"id":96762,"text":"static","isCorrect":false,"properties":{}},{"id":96763,"text":"required","isCorrect":false,"properties":{}}],"question":"Fill in the blanks to make the code that is generated for the label when you create an outlet:\r\n[!raw!]\r\n{0} weak var nameLabel: {1}","textContent":"[h1]Connect the Table Cell UI to Code[/h1]\r\n\r\nBefore we can display dynamic data in your table view cells, we need to create [b]outlet [/b]connections.\r\nIn your storyboard, select the label in the table view cell.\r\nClick the [b]Assistant [/b]button in the Xcode toolbar to open the assistant editor. [img id=\"1018\" width=\"60%\"] \r\nFrom the label on your canvas, [b]control-drag[/b] to the code display in the editor on the right, to [i]ItemTableViewCell.swift[/i]. In the dialog, give your label the  [b]Name [/b]of [i]nameLabel[/i]. Click [b]Connect[/b].\r\nThe property will be generated for the label: [code format=\"swift\"]@IBOutlet weak var nameLabel: UILabel![/code]\r\n[note]Even though you added all the necessary UI elements to your table view cells, they're showing up empty, until you implement the [b]data model[/b] behind it.[/note]"}]}}